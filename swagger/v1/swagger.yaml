---
openapi: 3.0.1
info:
  title: Questionnaire CMS API
  version: v1
  description: API for managing assessments, questions, and user responses with advanced
    features like conditional visibility, country restrictions, and comprehensive
    marking systems.
  contact:
    name: API Support
    email: support@questionnaire-cms.com
paths:
  "/api/v1/admin/assessments/{assessment_id}/sections/{section_id}/questions":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: section_id
      in: path
      description: Section ID
      required: true
      schema:
        type: integer
    get:
      summary: List assessment questions (admin)
      tags:
      - Admin - Assessment Questions
      description: Retrieve all questions for a section with optional filtering (admin
        only)
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number for pagination (default: 1)'
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 25, max: 100)'
        example: 25
        schema:
          type: integer
      - name: active
        in: query
        required: false
        description: Filter by active status
        example: true
        schema:
          type: boolean
      - name: is_required
        in: query
        required: false
        description: Filter by required status
        example: true
        schema:
          type: boolean
      - name: question_type
        in: query
        required: false
        description: Filter by question type
        example: AssessmentQuestions::MultipleChoice
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Search by question text
        example: name
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (order, created_at, updated_at)
        example: order
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: "Sort direction:\n * `asc` \n * `desc` \n "
        enum:
        - asc
        - desc
        example: asc
        schema:
          type: string
      responses:
        '200':
          description: questions found
          content:
            application/json:
              example:
                status: ok
                data:
                  questions:
                  - id: 1
                    text: What is your first question about?
                    type: AssessmentQuestions::RichText
                    question_type: AssessmentQuestions::RichText
                    question_type_name: Richtext
                    sub_type:
                    order: 1
                    is_required: true
                    active: true
                    meta_data: {}
                    is_conditional: false
                    has_country_restrictions: false
                    options: []
                    section:
                      id: 1
                      name: Test Section
                    created_at: '2025-08-11T08:13:32.248Z'
                    updated_at: '2025-08-11T08:13:32.248Z'
                  - id: 2
                    text: This is a second question with conditional visibility features
                    type: AssessmentQuestions::RichText
                    question_type: AssessmentQuestions::RichText
                    question_type_name: Richtext
                    sub_type:
                    order: 2
                    is_required: true
                    active: true
                    meta_data: {}
                    is_conditional: true
                    trigger_question_id: 1
                    trigger_response_type: value_equals
                    trigger_values:
                    - 'yes'
                    operator: equals
                    logic_operator:
                    condition_description: Visible when '{"en"=>"What is your first
                      question about?"}' equals exactly yes
                    has_country_restrictions: false
                    options: []
                    section:
                      id: 1
                      name: Test Section
                    created_at: '2025-08-11T08:13:32.257Z'
                    updated_at: '2025-08-11T08:13:32.257Z'
                  total_count: 2
                  section:
                    id: 1
                    name: Test Section
                  assessment:
                    id: 1
                    title: Test Assessment
                  pagination:
                    current_page: 1
                    per_page: 25
                    total_pages: 1
                  available_question_types:
                  - type: AssessmentQuestions::TextType
                    name: Text Input
                    description: Single line text input
                  - type: AssessmentQuestions::TextareaType
                    name: Textarea
                    description: Multi-line text input
                  - type: AssessmentQuestions::MultipleChoice
                    name: Multiple Choice
                    description: Multiple options, multiple selections allowed
                  - type: AssessmentQuestions::Radio
                    name: Radio Button
                    description: Multiple options, single selection
                  - type: AssessmentQuestions::BooleanType
                    name: Yes/No
                    description: Boolean true/false question
                  - type: AssessmentQuestions::DateType
                    name: Date
                    description: Date picker input
                  - type: AssessmentQuestions::FileUpload
                    name: File Upload
                    description: File attachment upload
                errors: []
                notes:
                - Assessment questions retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      questions:
                        type: array
                        items:
                          "$ref": "#/components/schemas/AssessmentQuestion"
                      total_count:
                        type: integer
                        example: 5
                      section:
                        "$ref": "#/components/schemas/AssessmentSection"
                      available_question_types:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Assessment questions retrieved successfully
                examples:
                  questions_found:
                    summary: List of assessment questions
                    value:
                      status: ok
                      data:
                        questions:
                        - id: 1
                          text:
                            en: What is your name?
                          type: AssessmentQuestions::RichText
                          question_type_name: Rich Text
                          order: 1
                          is_required: true
                          active: true
                          created_at: '2024-01-01T00:00:00.000Z'
                        total_count: 5
                        section:
                          id: 1
                          name: Introduction
                          order: 1
                        available_question_types:
                        - type: AssessmentQuestions::RichText
                          name: Rich Text
                          description: Rich text input
                      errors: []
                      notes:
                      - Assessment questions retrieved successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
    post:
      summary: Create assessment question (admin)
      tags:
      - Admin - Assessment Questions
      description: Create a new question for a section (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: conditional question created
          content:
            application/json:
              example:
                status: ok
                data:
                  question:
                    id: 10
                    text: Please explain your choice
                    type: AssessmentQuestions::RichText
                    question_type: AssessmentQuestions::RichText
                    question_type_name: Richtext
                    sub_type: long_text
                    order: 3
                    is_required: false
                    active: true
                    meta_data: {}
                    is_conditional: true
                    has_country_restrictions: false
                    options: []
                    section:
                      id: 4
                      name: Test Section
                    created_at: '2025-08-11T08:13:32.560Z'
                    updated_at: '2025-08-11T08:13:32.560Z'
                    trigger_question_id: 8
                    trigger_response_type: value_equals
                    trigger_values:
                    - other
                    operator: equals
                    logic_operator:
                    condition_description: Visible when '{"en"=>"What is your first
                      question about?"}' equals exactly other
                errors: []
                notes:
                - Assessment question created successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      question:
                        "$ref": "#/components/schemas/AssessmentQuestion"
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Assessment question created successfully
        '422':
          description: invalid question type
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: 'Invalid question type: InvalidQuestionType'
                  details: {}
                notes: []
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  data:
                    type: object
                    example: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error_code:
                          type: string
                          example: validation_error
                        message:
                          type: string
                          example: Text can't be blank
                        details:
                          type: object
                          example:
                            field: text
                  notes:
                    type: array
                    items:
                      type: string
                examples:
                  validation_error:
                    summary: Question validation failed
                    value:
                      status: error
                      data: {}
                      errors:
                      - error_code: validation_error
                        message: Text can't be blank
                        details:
                          field: text
                      notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: object
                  description: Question attributes
                  properties:
                    type:
                      type: string
                      description: Question type class name
                      example: AssessmentQuestions::MultipleChoice
                      enum:
                      - AssessmentQuestions::RichText
                      - AssessmentQuestions::MultipleChoice
                      - AssessmentQuestions::Radio
                      - AssessmentQuestions::BooleanType
                      - AssessmentQuestions::DateType
                      - AssessmentQuestions::RangeType
                      - AssessmentQuestions::FileUpload
                    text:
                      type: object
                      description: Question text in multiple languages
                      example:
                        en: What is your favorite color?
                      properties:
                        en:
                          type: string
                          description: English text
                        es:
                          type: string
                          description: Spanish text
                        fr:
                          type: string
                          description: French text
                    sub_type:
                      type: string
                      description: Question sub-type (required for some question types)
                      example: long_text
                    order:
                      type: integer
                      description: Display order (auto-assigned if not provided)
                      example: 1
                      minimum: 1
                    is_required:
                      type: boolean
                      description: Whether this question is required
                      example: true
                    active:
                      type: boolean
                      description: Whether this question is active
                      example: true
                    is_conditional:
                      type: boolean
                      description: Whether this question has conditional visibility
                      example: false
                    trigger_question_id:
                      type: integer
                      description: ID of the question that triggers visibility (required
                        if is_conditional is true)
                      example: 1
                    trigger_response_type:
                      type: string
                      description: Type of response to check (required if is_conditional
                        is true)
                      enum:
                      - option_selected
                      - value_equals
                      - value_range
                      example: value_equals
                    trigger_values:
                      type: array
                      items:
                        type: string
                      description: Array of values/option IDs that trigger visibility
                        (required if is_conditional is true)
                      example:
                      - 'yes'
                      - 'true'
                    operator:
                      type: string
                      description: Comparison operator (required if is_conditional
                        is true)
                      enum:
                      - equals
                      - not_equals
                      - contains
                      - greater_than
                      - less_than
                      - between
                      - any
                      - all
                      - none
                      example: equals
                    has_country_restrictions:
                      type: boolean
                      description: Whether this question has country restrictions
                      example: false
                    restricted_countries:
                      type: array
                      items:
                        type: string
                        pattern: "^[A-Z]{3}$"
                      description: Country codes to restrict (if has_country_restrictions
                        is true)
                      example:
                      - CHN
                    meta_data:
                      type: object
                      description: Additional metadata
                      example: {}
                  required:
                  - type
                  - text
              required:
              - question
              example:
                question:
                  type: AssessmentQuestions::MultipleChoice
                  text:
                    en: What is your favorite color?
                  is_required: true
                  active: true
                  is_conditional: false
        description: Question data for creation
  "/api/v1/admin/assessments/{assessment_id}/sections/{section_id}/questions/{id}":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: section_id
      in: path
      description: Section ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Question ID
      required: true
      schema:
        type: integer
    get:
      summary: Get assessment question details (admin)
      tags:
      - Admin - Assessment Questions
      description: Retrieve details of a specific assessment question (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: question found
          content:
            application/json:
              example:
                status: ok
                data:
                  question:
                    id: 18
                    text: This is a second question with conditional visibility features
                    type: AssessmentQuestions::RichText
                    question_type: AssessmentQuestions::RichText
                    question_type_name: Richtext
                    sub_type:
                    order: 2
                    is_required: true
                    active: true
                    meta_data: {}
                    is_conditional: true
                    trigger_question_id: 17
                    trigger_response_type: value_equals
                    trigger_values:
                    - 'yes'
                    operator: equals
                    logic_operator:
                    condition_description: Visible when '{"en"=>"What is your first
                      question about?"}' equals exactly yes
                    has_country_restrictions: false
                    options: []
                    section:
                      id: 8
                      name: Test Section
                    created_at: '2025-08-11T08:13:32.737Z'
                    updated_at: '2025-08-11T08:13:32.737Z'
                  options_count: 0
                  section:
                    id: 8
                    name: Test Section
                  assessment:
                    id: 8
                    title: Test Assessment
                  statistics:
                    total_options: 0
                    correct_options: 0
                    responses_count: 0
                errors: []
                notes:
                - Assessment question retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      question:
                        "$ref": "#/components/schemas/AssessmentQuestion"
                      statistics:
                        type: object
                        properties:
                          total_responses:
                            type: integer
                            example: 25
                          completion_rate:
                            type: number
                            example: 85.5
                          average_time:
                            type: number
                            example: 45.2
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Assessment question retrieved successfully
                examples:
                  question_found:
                    summary: Assessment question details
                    value:
                      status: ok
                      data:
                        question:
                          id: 2
                          text:
                            en: What is your experience level?
                          type: AssessmentQuestions::MultipleChoice
                          question_type_name: Multiple Choice
                          order: 2
                          is_required: true
                          active: true
                          is_conditional: true
                          trigger_question_id: 1
                          trigger_response_type: value_equals
                          trigger_values:
                          - 'yes'
                          operator: equals
                          created_at: '2024-01-01T00:00:00.000Z'
                        statistics:
                          total_responses: 25
                          completion_rate: 85.5
                          average_time: 45.2
                      errors: []
                      notes:
                      - Assessment question retrieved successfully
        '404':
          description: question not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Assessment question not found
                  details: {}
                notes: []
    patch:
      summary: Update assessment question (admin)
      tags:
      - Admin - Assessment Questions
      description: Update an assessment question (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: question updated
          content:
            application/json:
              example:
                status: ok
                data:
                  question:
                    id: 22
                    text: Updated question text
                    type: AssessmentQuestions::RichText
                    question_type: AssessmentQuestions::RichText
                    question_type_name: Richtext
                    sub_type: long_text
                    order: 2
                    is_required: false
                    active: true
                    meta_data: {}
                    is_conditional: true
                    trigger_question_id: 21
                    trigger_response_type: value_equals
                    trigger_values:
                    - skip
                    operator: not_equals
                    logic_operator:
                    condition_description: Visible when '{"en"=>"What is your first
                      question about?"}' does not equal skip
                    has_country_restrictions: false
                    options: []
                    section:
                      id: 10
                      name: Test Section
                    created_at: '2025-08-11T08:13:32.847Z'
                    updated_at: '2025-08-11T08:13:32.858Z'
                errors: []
                notes:
                - Assessment question updated successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: object
                  description: Question attributes to update
                  properties:
                    text:
                      type: object
                      description: Question text in multiple languages
                      example:
                        en: Updated question text?
                    is_required:
                      type: boolean
                      description: Whether this question is required
                      example: false
                    active:
                      type: boolean
                      description: Whether this question is active
                      example: true
                    is_conditional:
                      type: boolean
                      description: Whether this question has conditional visibility
                      example: true
                    trigger_question_id:
                      type: integer
                      description: ID of the question that triggers visibility
                      example: 1
                    trigger_response_type:
                      type: string
                      description: Type of response to check
                      enum:
                      - option_selected
                      - value_equals
                      - value_range
                      example: value_equals
                    trigger_values:
                      type: array
                      items:
                        type: string
                      description: Array of values that trigger visibility
                      example:
                      - 'no'
                    operator:
                      type: string
                      description: Comparison operator
                      enum:
                      - equals
                      - not_equals
                      - contains
                      - greater_than
                      - less_than
                      - between
                      - any
                      - all
                      - none
                      example: not_equals
              required:
              - question
              example:
                question:
                  text:
                    en: 'Updated: What is your favorite color?'
                  is_required: false
                  is_conditional: true
                  trigger_question_id: 1
                  trigger_response_type: value_equals
                  trigger_values:
                  - 'yes'
                  operator: equals
        description: Question data for update
    delete:
      summary: Delete assessment question (admin)
      tags:
      - Admin - Assessment Questions
      description: Delete an assessment question (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: question deleted
          content:
            application/json:
              example:
                status: ok
                data:
                  deleted_id: 27
                errors: []
                notes:
                - Assessment question 'Question to delete' deleted successfully
        '422':
          description: cannot delete question with responses
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Cannot delete question with existing responses
                  details:
                    responses_count: 1
                    suggestion: Archive the question instead of deleting it
                notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/assessments/{assessment_id}/sections":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    get:
      summary: List assessment sections (admin)
      tags:
      - Admin - Assessment Sections
      description: Retrieve all sections for an assessment with optional filtering
        (admin only)
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number for pagination (default: 1)'
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 25, max: 100)'
        example: 25
        schema:
          type: integer
      - name: active
        in: query
        required: false
        description: Filter by active status
        example: true
        schema:
          type: boolean
      - name: search
        in: query
        required: false
        description: Search by section name
        example: introduction
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (order, name, created_at)
        example: order
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: "Sort direction:\n * `asc` \n * `desc` \n "
        enum:
        - asc
        - desc
        example: asc
        schema:
          type: string
      responses:
        '200':
          description: sections found
          content:
            application/json:
              example:
                status: ok
                data:
                  sections:
                  - id: 15
                    name: Section 1
                    order: 1
                    metadata: {}
                    is_conditional: false
                    has_country_restrictions: false
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.094Z'
                    updated_at: '2025-08-11T08:13:33.094Z'
                  - id: 16
                    name: Section 2
                    order: 2
                    metadata: {}
                    is_conditional: false
                    has_country_restrictions: false
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.096Z'
                    updated_at: '2025-08-11T08:13:33.096Z'
                  total_count: 2
                  assessment:
                    id: 15
                    title: Test Assessment
                  pagination:
                    current_page: 1
                    per_page: 25
                    total_pages: 1
                errors: []
                notes:
                - Assessment sections retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      sections:
                        type: array
                        items:
                          "$ref": "#/components/schemas/AssessmentSection"
                      total_count:
                        type: integer
                        example: 2
                      assessment:
                        "$ref": "#/components/schemas/Assessment"
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Assessment sections retrieved successfully
                examples:
                  sections_found:
                    summary: List of assessment sections
                    value:
                      status: ok
                      data:
                        sections:
                        - id: 1
                          name: Introduction
                          order: 1
                          is_conditional: false
                          has_country_restrictions: false
                          questions_count: 3
                          created_at: '2024-01-01T00:00:00.000Z'
                        total_count: 1
                        assessment:
                          id: 1
                          title: Customer Satisfaction Survey
                          description: Annual customer feedback survey
                      errors: []
                      notes:
                      - Assessment sections retrieved successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
        '404':
          description: assessment not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Assessment not found
                  details: {}
                notes: []
    post:
      summary: Create assessment section (admin)
      tags:
      - Admin - Assessment Sections
      description: Create a new section for an assessment (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: section created
          content:
            application/json:
              examples:
                example_0:
                  value:
                    Basic Section Creation:
                      value:
                        status: ok
                        data:
                          section:
                            id: 1
                            name: New Section
                            order: 3
                            metadata: {}
                            is_conditional: false
                            has_country_restrictions: false
                            restricted_countries: []
                            questions_count: 0
                            created_at: '2024-01-15T10:30:00Z'
                            updated_at: '2024-01-15T10:30:00Z'
                        errors: []
                        notes:
                        - Assessment section 'New Section' created successfully
              example:
                status: ok
                data:
                  section:
                    id: 23
                    name: New Section
                    order: 3
                    metadata: {}
                    is_conditional: false
                    has_country_restrictions: false
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.195Z'
                    updated_at: '2025-08-11T08:13:33.195Z'
                errors: []
                notes:
                - Assessment section 'New Section' created successfully
              schema:
                "$ref": "#/components/schemas/ApiResponse"
        '422':
          description: validation failed
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Section creation failed
                  details:
                    errors:
                    - Name is too long (maximum is 255 characters)
                notes: []
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  data:
                    type: object
                    example: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error_code:
                          type: string
                          example: validation_error
                        message:
                          type: string
                          example: Name is too long (maximum is 200 characters)
                        details:
                          type: object
                          example:
                            field: name
                  notes:
                    type: array
                    items:
                      type: string
                examples:
                  validation_error:
                    summary: Section validation failed
                    value:
                      status: error
                      data: {}
                      errors:
                      - error_code: validation_error
                        message: Name is too long (maximum is 200 characters)
                        details:
                          field: name
                      notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                section:
                  type: object
                  description: Section attributes
                  properties:
                    name:
                      type: string
                      description: Section name
                      example: Introduction
                      maxLength: 200
                    order:
                      type: integer
                      description: Display order (auto-assigned if not provided)
                      example: 1
                      minimum: 1
                    is_conditional:
                      type: boolean
                      description: Whether this section has conditional visibility
                      example: false
                    has_country_restrictions:
                      type: boolean
                      description: Whether this section has country restrictions
                      example: false
                    visibility_conditions:
                      type: object
                      description: Conditional visibility rules (if is_conditional
                        is true)
                      example: {}
                    restricted_countries:
                      type: array
                      items:
                        type: string
                        pattern: "^[A-Z]{3}$"
                      description: Country codes to restrict (if has_country_restrictions
                        is true)
                      example:
                      - CHN
                    metadata:
                      type: object
                      description: Additional metadata
                      example: {}
                  required:
                  - name
              required:
              - section
              example:
                section:
                  name: Introduction
                  order: 1
                  is_conditional: false
                  has_country_restrictions: false
                  metadata:
                    description: Welcome section with basic instructions
                    estimated_time_minutes: 3
                    category: introduction
        description: Section data for creation
  "/api/v1/admin/assessments/{assessment_id}/sections/{id}":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Section ID
      required: true
      schema:
        type: integer
    get:
      summary: Get assessment section details (admin)
      tags:
      - Admin - Assessment Sections
      description: Retrieve details of a specific assessment section (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: section found
          content:
            application/json:
              example:
                status: ok
                data:
                  section:
                    id: 28
                    name: Section 1
                    order: 1
                    metadata: {}
                    is_conditional: false
                    has_country_restrictions: false
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.304Z'
                    updated_at: '2025-08-11T08:13:33.304Z'
                  questions_count: 0
                  assessment:
                    id: 21
                    title: Test Assessment
                  statistics:
                    total_questions: 0
                    active_questions: 0
                    required_questions: 0
                errors: []
                notes:
                - Assessment section retrieved successfully
        '404':
          description: section not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Assessment section not found
                  details: {}
                notes: []
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  data:
                    type: object
                    example: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error_code:
                          type: string
                          example: not_found_error
                        message:
                          type: string
                          example: Assessment section not found
                        details:
                          type: object
                          example: {}
                  notes:
                    type: array
                    items:
                      type: string
                examples:
                  not_found_error:
                    summary: Section not found
                    value:
                      status: error
                      data: {}
                      errors:
                      - error_code: not_found_error
                        message: Assessment section not found
                        details: {}
                      notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
    patch:
      summary: Update assessment section (admin)
      tags:
      - Admin - Assessment Sections
      description: Update an assessment section (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: section updated
          content:
            application/json:
              example:
                status: ok
                data:
                  section:
                    id: 34
                    name: Updated Section Name
                    order: 5
                    metadata: {}
                    is_conditional: false
                    has_country_restrictions: false
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.404Z'
                    updated_at: '2025-08-11T08:13:33.411Z'
                errors: []
                notes:
                - Assessment section 'Updated Section Name' updated successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                section:
                  type: object
                  description: Section attributes to update
                  properties:
                    name:
                      type: string
                      description: Section name
                      example: Updated Introduction
                      maxLength: 200
                    order:
                      type: integer
                      description: Display order
                      example: 2
                      minimum: 1
                    is_conditional:
                      type: boolean
                      description: Whether this section has conditional visibility
                      example: true
                    has_country_restrictions:
                      type: boolean
                      description: Whether this section has country restrictions
                      example: false
                    visibility_conditions:
                      type: object
                      description: Conditional visibility rules
                      example:
                        trigger_question_id: 5
                        operator: equals
                        value: 'yes'
                    restricted_countries:
                      type: array
                      items:
                        type: string
                        pattern: "^[A-Z]{3}$"
                      description: Country codes to restrict
                      example: []
              required:
              - section
              example:
                section:
                  name: Updated Introduction
                  order: 2
        description: Section data for update
    delete:
      summary: Delete assessment section (admin)
      tags:
      - Admin - Assessment Sections
      description: Delete an assessment section (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: section deleted
          content:
            application/json:
              example:
                status: ok
                data:
                  deleted_id: 40
                errors: []
                notes:
                - Assessment section 'Delete Me' deleted successfully
        '422':
          description: cannot delete section with questions
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Cannot delete section with existing questions
                  details:
                    questions_count: 1
                    suggestion: Delete all questions first or move them to another
                      section
                notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/assessments":
    get:
      summary: List all assessments (admin)
      tags:
      - Admin - Assessments
      description: Retrieve all assessments with admin statistics and optional filtering
        (admin only)
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number for pagination (default: 1)'
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 25, max: 100)'
        example: 25
        schema:
          type: integer
      - name: active
        in: query
        required: false
        description: Filter by active status
        example: true
        schema:
          type: boolean
      - name: has_country_restrictions
        in: query
        required: false
        description: Filter by country restrictions
        example: false
        schema:
          type: boolean
      - name: search
        in: query
        required: false
        description: Search by title or description
        example: survey
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (title, created_at, updated_at)
        example: created_at
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: "Sort direction:\n * `asc` \n * `desc` \n "
        enum:
        - asc
        - desc
        example: desc
        schema:
          type: string
      responses:
        '200':
          description: assessments found
          content:
            application/json:
              example:
                status: ok
                data:
                  assessments:
                  - id: 29
                    title: Public Assessment
                    description: Perspiciatis rerum eos. Quasi natus error.
                    active: true
                    has_country_restrictions: false
                    restricted_countries: []
                    sections_count: 0
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.556Z'
                    updated_at: '2025-08-11T08:13:33.556Z'
                  - id: 30
                    title: Restricted Assessment
                    description: Qui culpa rerum. Quia corrupti at.
                    active: true
                    has_country_restrictions: true
                    restricted_countries:
                    - China
                    sections_count: 0
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.557Z'
                    updated_at: '2025-08-11T08:13:33.557Z'
                  total_count: 2
                  active_count: 2
                  inactive_count: 0
                errors: []
                notes:
                - Assessments retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      assessments:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Assessment"
                      total_count:
                        type: integer
                      active_count:
                        type: integer
                      inactive_count:
                        type: integer
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
        '401':
          description: unauthorized - no token
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
    post:
      summary: Create a new assessment (admin)
      tags:
      - Admin - Assessments
      description: Create a new assessment (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: assessment created
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Assessment created successfully
                data:
                  assessment:
                    id: 37
                    title: New Assessment
                    description: A new assessment for testing
                    active: true
                    has_country_restrictions: false
                    restricted_countries: []
                    sections_count: 0
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.646Z'
                    updated_at: '2025-08-11T08:13:33.646Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      assessment:
                        "$ref": "#/components/schemas/Assessment"
                      sections_count:
                        type: integer
                        example: 0
                      questions_count:
                        type: integer
                        example: 0
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Assessment created successfully
        '422':
          description: validation failed
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: validation_error
                  message: Assessment creation failed
                  details:
                    errors:
                    - Title can't be blank
                    - Title is too short (minimum is 3 characters)
                notes: []
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  data:
                    type: object
                    example: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error_code:
                          type: string
                          example: validation_error
                        message:
                          type: string
                          example: Name can't be blank
                        details:
                          type: object
                          example:
                            field: name
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assessment:
                  type: object
                  description: Assessment attributes
                  properties:
                    title:
                      type: string
                      description: Assessment title (must be unique)
                      example: Customer Satisfaction Survey
                      maxLength: 200
                    description:
                      type: string
                      description: Detailed description of the assessment purpose
                        and content
                      example: A comprehensive survey to measure customer satisfaction
                        levels across different service areas
                    active:
                      type: boolean
                      description: Whether the assessment should be active and available
                        to users
                      example: true
                    has_country_restrictions:
                      type: boolean
                      description: Whether to enable country-based access restrictions
                      example: false
                    restricted_countries:
                      type: array
                      items:
                        type: string
                        pattern: "^[A-Z]{3}$"
                      description: Array of ISO 3166-1 alpha-3 country codes to restrict
                        access from (only used if has_country_restrictions is true)
                      example:
                      - CHN
                      - RUS
                  required:
                  - title
                  - description
              required:
              - assessment
              example:
                assessment:
                  title: Customer Satisfaction Survey
                  description: A comprehensive survey to measure customer satisfaction
                    levels
                  active: true
                  has_country_restrictions: false
                  restricted_countries: []
        description: Assessment data for creation
  "/api/v1/admin/assessments/{id}":
    parameters:
    - name: id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    get:
      summary: Get assessment details (admin)
      tags:
      - Admin - Assessments
      description: Retrieve details of a specific assessment with statistics (admin
        only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: assessment found
          content:
            application/json:
              example:
                status: ok
                data:
                  assessment:
                    id: 42
                    title: Public Assessment
                    description: Et voluptatum tempore. Et non est.
                    active: true
                    has_country_restrictions: false
                    restricted_countries: []
                    sections_count: 0
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.749Z'
                    updated_at: '2025-08-11T08:13:33.749Z'
                  sections_count: 0
                  questions_count: 0
                  statistics:
                    response_sessions_count: 0
                    completed_sessions_count: 0
                    average_score:
                errors: []
                notes:
                - Assessment retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      assessment:
                        "$ref": "#/components/schemas/Assessment"
                      sections_count:
                        type: integer
                      questions_count:
                        type: integer
                      statistics:
                        type: object
                        properties:
                          response_sessions_count:
                            type: integer
                          completed_sessions_count:
                            type: integer
                          average_score:
                            type: number
                            nullable: true
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
        '404':
          description: assessment not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Assessment not found
                  details: {}
                notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
    patch:
      summary: Update assessment (admin)
      tags:
      - Admin - Assessments
      description: Update an assessment (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: assessment updated
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Assessment updated successfully
                data:
                  assessment:
                    id: 48
                    title: Updated Assessment
                    description: Updated description
                    active: false
                    has_country_restrictions: false
                    restricted_countries: []
                    sections_count: 0
                    questions_count: 0
                    created_at: '2025-08-11T08:13:33.862Z'
                    updated_at: '2025-08-11T08:13:33.867Z'
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assessment:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    active:
                      type: boolean
                    has_country_restrictions:
                      type: boolean
                    restricted_countries:
                      type: array
                      items:
                        type: string
              required:
              - assessment
    delete:
      summary: Delete assessment (admin)
      tags:
      - Admin - Assessments
      description: Delete an assessment (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: assessment deleted
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Assessment deleted successfully
                data:
                  deleted_id: 54
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/countries":
    get:
      summary: List all countries (admin)
      tags:
      - Admin - Countries
      description: Retrieve all countries including inactive ones with optional filtering
        (admin only)
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number for pagination (default: 1)'
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 25, max: 100)'
        example: 25
        schema:
          type: integer
      - name: active
        in: query
        required: false
        description: Filter by active status
        example: true
        schema:
          type: boolean
      - name: region
        in: query
        required: false
        description: "Filter by region:\n * `Africa` \n * `Americas` \n * `Asia` \n
          * `Europe` \n * `Oceania` \n "
        enum:
        - Africa
        - Americas
        - Asia
        - Europe
        - Oceania
        example: Americas
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Search by country name or code
        example: united
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (name, code, sort_order)
        example: name
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: Sort direction
        enum:
        - asc
        - desc
        example: asc
        schema:
          type: string
      responses:
        '200':
          description: countries found
          content:
            application/json:
              example:
                status: ok
                data:
                  countries:
                  - id: 55
                    name: United States
                    code: USA
                    display_name: United States (USA)
                    region: Americas
                    active: true
                    sort_order: 0
                  - id: 56
                    name: China
                    code: CHN
                    display_name: China (CHN)
                    region: Asia
                    active: true
                    sort_order: 0
                  - id: 57
                    name: Australia 1
                    code: TSB
                    display_name: Australia 1 (TSB)
                    region: Asia
                    active: false
                    sort_order: 0
                  total_count: 3
                  active_count: 2
                  inactive_count: 1
                  regions:
                  - Africa
                  - Americas
                  - Asia
                  - Europe
                  - Oceania
                errors: []
                notes:
                - Countries retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      countries:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Country"
                      total_count:
                        type: integer
                      active_count:
                        type: integer
                      inactive_count:
                        type: integer
                      regions:
                        type: array
                        items:
                          type: string
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
        '401':
          description: unauthorized - no token
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
    post:
      summary: Create a new country (admin)
      tags:
      - Admin - Countries
      description: Create a new country (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: country created
          content:
            application/json:
              example:
                status: ok
                data:
                  country:
                    id: 67
                    name: New Country
                    code: NEW
                    display_name: New Country (NEW)
                    region: Americas
                    active: true
                    sort_order: 0
                errors: []
                notes:
                - Country created successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      country:
                        "$ref": "#/components/schemas/Country"
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Country created successfully
                examples:
                  country_created:
                    summary: New country created successfully
                    value:
                      status: ok
                      data:
                        country:
                          id: 1
                          name: United States
                          code: USA
                          region: Americas
                          active: true
                          users_count: 0
                          created_at: '2024-01-01T00:00:00.000Z'
                      errors: []
                      notes:
                      - Country created successfully
        '422':
          description: validation failed
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Country creation failed
                  details:
                    errors:
                    - Name can't be blank
                    - Code can't be blank
                    - Code is the wrong length (should be 3 characters)
                    - Code must be 3 uppercase letters (ISO 3166-1 alpha-3)
                notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: object
                  description: Country attributes
                  properties:
                    name:
                      type: string
                      description: Country name (must be unique)
                      example: New Country
                      maxLength: 100
                    code:
                      type: string
                      description: ISO 3166-1 alpha-3 country code (must be unique,
                        3 uppercase letters)
                      example: NEW
                      pattern: "^[A-Z]{3}$"
                      minLength: 3
                      maxLength: 3
                    region:
                      type: string
                      description: Geographic region
                      enum:
                      - Africa
                      - Americas
                      - Asia
                      - Europe
                      - Oceania
                      example: Americas
                    active:
                      type: boolean
                      description: Whether the country should be active and available
                        for selection
                      example: true
                    sort_order:
                      type: integer
                      description: Display order (lower numbers appear first)
                      example: 0
                      minimum: 0
                  required:
                  - name
                  - code
                  - region
              required:
              - country
              example:
                country:
                  name: New Country
                  code: NEW
                  region: Americas
                  active: true
                  sort_order: 0
        description: Country data for creation
  "/api/v1/admin/countries/{id}":
    parameters:
    - name: id
      in: path
      description: Country ID
      required: true
      schema:
        type: integer
    get:
      summary: Get country details (admin)
      tags:
      - Admin - Countries
      description: Retrieve details of a specific country with statistics (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: country found
          content:
            application/json:
              example:
                status: ok
                data:
                  country:
                    id: 74
                    name: United States
                    code: USA
                    display_name: United States (USA)
                    region: Americas
                    active: true
                    sort_order: 0
                  users_count: 2
                  restricted_content_count:
                    questions: 0
                    sections: 0
                errors: []
                notes:
                - Country retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      country:
                        "$ref": "#/components/schemas/Country"
                      users_count:
                        type: integer
                      restricted_content_count:
                        type: object
                        properties:
                          questions:
                            type: integer
                          sections:
                            type: integer
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
        '404':
          description: country not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Country not found
                  details: {}
                notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
    patch:
      summary: Update country (admin)
      tags:
      - Admin - Countries
      description: Update a country (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: country updated
          content:
            application/json:
              example:
                status: ok
                data:
                  country:
                    id: 83
                    name: Updated States
                    code: USA
                    display_name: Updated States (USA)
                    region: Americas
                    active: true
                    sort_order: 1
                errors: []
                notes:
                - Country updated successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: object
                  properties:
                    name:
                      type: string
                    code:
                      type: string
                    region:
                      type: string
                    active:
                      type: boolean
                    sort_order:
                      type: integer
              required:
              - country
    delete:
      summary: Delete country (admin)
      tags:
      - Admin - Countries
      description: Delete a country (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: country deleted
          content:
            application/json:
              example:
                status: ok
                data:
                  deleted_id: 92
                errors: []
                notes:
                - Country deleted successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/countries/{id}/activate":
    parameters:
    - name: id
      in: path
      description: Country ID
      required: true
      schema:
        type: integer
    patch:
      summary: Activate country (admin)
      tags:
      - Admin - Countries
      description: Activate a country (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: country activated
          content:
            application/json:
              example:
                status: ok
                data:
                  country:
                    id: 101
                    name: Benin 15
                    code: TSP
                    display_name: Benin 15 (TSP)
                    region: Americas
                    active: true
                    sort_order: 1
                errors: []
                notes:
                - Country activated successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/countries/{id}/deactivate":
    parameters:
    - name: id
      in: path
      description: Country ID
      required: true
      schema:
        type: integer
    patch:
      summary: Deactivate country (admin)
      tags:
      - Admin - Countries
      description: Deactivate a country (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: country deactivated
          content:
            application/json:
              example:
                status: ok
                data:
                  country:
                    id: 106
                    name: China
                    code: CHN
                    display_name: China (CHN)
                    region: Asia
                    active: false
                    sort_order: 1
                errors: []
                notes:
                - Country deactivated successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/countries/{id}/statistics":
    parameters:
    - name: id
      in: path
      description: Country ID
      required: true
      schema:
        type: integer
    get:
      summary: Get country statistics (admin)
      tags:
      - Admin - Countries
      description: Get detailed statistics for a country (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: statistics retrieved
          content:
            application/json:
              example:
                status: ok
                data:
                  country:
                    id: 111
                    name: United States
                    code: USA
                    display_name: United States (USA)
                    region: Americas
                    active: true
                    sort_order: 0
                  statistics:
                    users_count: 2
                    restricted_assessments_count: 0
                    restricted_sections_count: 0
                    restricted_questions_count: 0
                    total_restricted_content: 0
                errors: []
                notes:
                - Country statistics retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      country:
                        "$ref": "#/components/schemas/Country"
                      statistics:
                        type: object
                        properties:
                          users_count:
                            type: integer
                          restricted_assessments_count:
                            type: integer
                          restricted_sections_count:
                            type: integer
                          restricted_questions_count:
                            type: integer
                          total_restricted_content:
                            type: integer
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{marking_scheme_id}/rules":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: marking_scheme_id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    get:
      summary: List marking rules (admin)
      tags:
      - Admin - Marking Rules
      description: List marking rules for a scheme, with pagination and filters
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
      - name: is_active
        in: query
        required: false
        schema:
          type: boolean
      - name: question_id
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: marking rules found
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_rules:
                  - id: 1
                    rule_type: option_based
                    points: 10.0
                    is_active: true
                    order: 1
                    criteria: {}
                    assessment_question:
                      id: 33
                      type: AssessmentQuestions::MultipleChoice
                      sub_type:
                    marking_scheme:
                      id: 1
                    created_at: '2025-08-11T08:13:34.672Z'
                    updated_at: '2025-08-11T08:13:34.672Z'
                  total_count: 1
                  active_count: 1
                  pagination:
                    current_page: 1
                    per_page: 25
                    total_pages: 1
                  assessment:
                    id: 57
                    title: Officiis nisi et.
                  marking_scheme:
                    id: 1
                    name: Default Scheme
                errors: []
                notes:
                - Marking rules retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_rules:
                        type: array
                        items:
                          "$ref": "#/components/schemas/MarkingRule"
                      total_count:
                        type: integer
                      active_count:
                        type: integer
                      pagination:
                        type: object
                      assessment:
                        type: object
                      marking_scheme:
                        type: object
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
    post:
      summary: Create marking rule (admin)
      tags:
      - Admin - Marking Rules
      description: Create a marking rule for a question under a scheme
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: marking rule created
          content:
            application/json:
              examples:
                multiple_choice_example:
                  value:
                    status: ok
                    data:
                      marking_rule:
                        id: 1
                        rule_type: option_based
                        points: 10
                        is_active: true
                        order: 1
                        criteria:
                          partial_scoring: true
                        assessment_question:
                          id: 100
                          type: AssessmentQuestions::MultipleChoice
                          sub_type:
                        marking_scheme:
                          id: 1
                        created_at: '2025-01-01T00:00:00Z'
                        updated_at: '2025-01-01T00:00:00Z'
                    errors: []
                    notes:
                    - Marking rule created successfully
                  summary: Create rule for MultipleChoice (option_based)
                range_type_example:
                  value:
                    status: ok
                    data:
                      marking_rule:
                        id: 2
                        rule_type: range_based
                        points: 5
                        is_active: true
                        order: 1
                        criteria:
                          min: 1
                          max: 5
                          tolerance: 0
                        assessment_question:
                          id: 101
                          type: AssessmentQuestions::RangeType
                          sub_type:
                        marking_scheme:
                          id: 1
                        created_at: '2025-01-01T00:00:00Z'
                        updated_at: '2025-01-01T00:00:00Z'
                    errors: []
                    notes:
                    - Marking rule created successfully
                  summary: Create rule for RangeType (range_based)
                date_type_example:
                  value:
                    status: ok
                    data:
                      marking_rule:
                        id: 3
                        rule_type: tolerance_based
                        points: 5
                        is_active: true
                        order: 1
                        criteria:
                          expected_value: 20240101
                          tolerance: 2
                        assessment_question:
                          id: 102
                          type: AssessmentQuestions::DateType
                          sub_type:
                        marking_scheme:
                          id: 1
                        created_at: '2025-01-01T00:00:00Z'
                        updated_at: '2025-01-01T00:00:00Z'
                    errors: []
                    notes:
                    - Marking rule created successfully
                  summary: Create rule for DateType (tolerance_based)
                rich_text_example:
                  value:
                    status: ok
                    data:
                      marking_rule:
                        id: 4
                        rule_type: partial_match
                        points: 15
                        is_active: true
                        order: 1
                        criteria:
                          expected_values:
                          - safety
                          - compliance
                          partial_match_threshold: 0.7
                          scoring_method: proportional
                        assessment_question:
                          id: 103
                          type: AssessmentQuestions::RichText
                          sub_type:
                        marking_scheme:
                          id: 1
                        created_at: '2025-01-01T00:00:00Z'
                        updated_at: '2025-01-01T00:00:00Z'
                    errors: []
                    notes:
                    - Marking rule created successfully
                  summary: Create rule for RichText (partial_match)
                file_upload_example:
                  value:
                    status: ok
                    data:
                      marking_rule:
                        id: 5
                        rule_type: file_based
                        points: 5
                        is_active: true
                        order: 1
                        criteria:
                          file_criteria:
                            allowed_types:
                            - application/pdf
                            max_size: 1048576
                        assessment_question:
                          id: 104
                          type: AssessmentQuestions::FileUpload
                          sub_type:
                        marking_scheme:
                          id: 1
                        created_at: '2025-01-01T00:00:00Z'
                        updated_at: '2025-01-01T00:00:00Z'
                    errors: []
                    notes:
                    - Marking rule created successfully
                  summary: Create rule for FileUpload (file_based)
              example:
                status: ok
                data:
                  marking_rule:
                    id: 2
                    rule_type: option_based
                    points: 10.0
                    is_active: true
                    order: 1
                    criteria:
                      partial_scoring: true
                    assessment_question:
                      id: 36
                      type: AssessmentQuestions::MultipleChoice
                      sub_type:
                    marking_scheme:
                      id: 4
                    created_at: '2025-08-11T08:13:34.788Z'
                    updated_at: '2025-08-11T08:13:34.788Z'
                errors: []
                notes:
                - Marking rule created successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_rule:
                        "$ref": "#/components/schemas/MarkingRule"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '422':
          description: validation failed
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Marking rule creation failed
                  details:
                    errors:
                    - Rule type is not included in the list
                    - 'Rule type is not compatible with this question type. Available
                      types: option_based'
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                marking_rule:
                  oneOf:
                  - type: object
                    description: MultipleChoice / Radio / BooleanType rule (option_based)
                    properties:
                      assessment_question_id:
                        type: integer
                        description: Target question ID (MultipleChoice/Radio/BooleanType)
                        example: 100
                      rule_type:
                        type: string
                        enum:
                        - option_based
                        description: Must be 'option_based' for choice questions
                        example: option_based
                      points:
                        type: number
                        description: Default points for correct answers without explicit
                          option points
                        example: 10
                      is_active:
                        type: boolean
                        description: Activate this rule
                        example: true
                      order:
                        type: integer
                        description: Rule evaluation order (1..N)
                        example: 1
                      criteria:
                        type: object
                        description: Option-based criteria
                        properties:
                          partial_scoring:
                            type: boolean
                            description: Award partial points for subsets of correct
                              options
                            example: true
                          negative_scoring:
                            type: boolean
                            description: Deduct points for wrong selections (if supported)
                            example: false
                        example:
                          partial_scoring: true
                    required:
                    - assessment_question_id
                    - rule_type
                    example:
                      assessment_question_id: 100
                      rule_type: option_based
                      points: 10
                      is_active: true
                      criteria:
                        partial_scoring: true
                  - type: object
                    description: RangeType rule (range_based)
                    properties:
                      assessment_question_id:
                        type: integer
                        description: Target RangeType question ID
                        example: 101
                      rule_type:
                        type: string
                        enum:
                        - range_based
                        description: Must be 'range_based' for RangeType
                        example: range_based
                      points:
                        type: number
                        description: Points when value within min..max (plus optional
                          tolerance)
                        example: 5
                      is_active:
                        type: boolean
                        description: Activate this rule
                        example: true
                      order:
                        type: integer
                        description: Rule evaluation order (1..N)
                        example: 1
                      criteria:
                        type: object
                        description: Range definition
                        properties:
                          min:
                            type: number
                            description: Minimum inclusive
                            example: 1
                          max:
                            type: number
                            description: Maximum inclusive
                            example: 5
                          tolerance:
                            type: number
                            description: Allowed deviation from bounds
                            example: 0
                        required:
                        - min
                        - max
                        example:
                          min: 1
                          max: 5
                          tolerance: 0
                    required:
                    - assessment_question_id
                    - rule_type
                    - points
                    - criteria
                  - type: object
                    description: DateType rule (tolerance_based)
                    properties:
                      assessment_question_id:
                        type: integer
                        description: Target DateType question ID
                        example: 102
                      rule_type:
                        type: string
                        enum:
                        - tolerance_based
                        description: Must be 'tolerance_based' for date proximity
                        example: tolerance_based
                      points:
                        type: number
                        description: Points when within tolerance of expected date
                        example: 5
                      is_active:
                        type: boolean
                        description: Activate this rule
                        example: true
                      order:
                        type: integer
                        description: Rule evaluation order (1..N)
                        example: 1
                      criteria:
                        type: object
                        description: Expected date and tolerance
                        properties:
                          expected_value:
                            type: number
                            description: Expected date encoded (e.g., YYYYMMDD)
                            example: 20240101
                          tolerance:
                            type: number
                            description: Permitted deviation (units per implementation)
                            example: 2
                        required:
                        - expected_value
                        - tolerance
                        example:
                          expected_value: 20240101
                          tolerance: 2
                    required:
                    - assessment_question_id
                    - rule_type
                    - points
                    - criteria
                  - type: object
                    description: RichText rule (partial_match / exact_match / keyword_based)
                    properties:
                      assessment_question_id:
                        type: integer
                        description: Target RichText question ID
                        example: 103
                      rule_type:
                        type: string
                        enum:
                        - partial_match
                        - exact_match
                        - keyword_based
                        description: Supported text rule types
                        example: partial_match
                      points:
                        type: number
                        description: Max points when the rule is satisfied
                        example: 15
                      is_active:
                        type: boolean
                        description: Activate this rule
                        example: true
                      order:
                        type: integer
                        description: Rule evaluation order (1..N)
                        example: 1
                      criteria:
                        type: object
                        description: Text matching criteria
                        properties:
                          expected_values:
                            type: array
                            items:
                              type: string
                            description: Phrases to match (partial/exact)
                            example:
                            - safety
                            - compliance
                          partial_match_threshold:
                            type: number
                            description: Threshold for partial match similarity (0-1)
                            example: 0.7
                          scoring_method:
                            type: string
                            enum:
                            - proportional
                            - all_or_nothing
                            description: How to award points for matches
                            example: proportional
                          case_sensitive:
                            type: boolean
                            description: Apply case sensitivity for exact match
                            example: false
                          trim_whitespace:
                            type: boolean
                            description: Trim whitespace before comparison
                            example: true
                        example:
                          expected_values:
                          - safety
                          - compliance
                          partial_match_threshold: 0.7
                          scoring_method: proportional
                    required:
                    - assessment_question_id
                    - rule_type
                    - points
                  - type: object
                    description: FileUpload rule (file_based / size_based / type_based)
                    properties:
                      assessment_question_id:
                        type: integer
                        description: Target FileUpload question ID
                        example: 104
                      rule_type:
                        type: string
                        enum:
                        - file_based
                        - size_based
                        - type_based
                        description: Supported file rule types
                        example: file_based
                      points:
                        type: number
                        description: Points awarded when file satisfies constraints
                        example: 5
                      is_active:
                        type: boolean
                        description: Activate this rule
                        example: true
                      order:
                        type: integer
                        description: Rule evaluation order (1..N)
                        example: 1
                      criteria:
                        type: object
                        description: File constraints / policies
                        properties:
                          file_criteria:
                            type: object
                            description: Constraints object for file-based validation
                            properties:
                              allowed_types:
                                type: array
                                items:
                                  type: string
                                description: Allowed MIME types
                                example:
                                - application/pdf
                              max_size:
                                type: integer
                                description: Max file size in bytes
                                example: 1048576
                          max_size:
                            type: integer
                            description: Max file size (for size_based)
                            example: 1048576
                          allowed_types:
                            type: array
                            items:
                              type: string
                            description: Allowed MIME types (for type_based)
                            example:
                            - image/png
                            - image/jpeg
                        example:
                          file_criteria:
                            allowed_types:
                            - application/pdf
                            max_size: 1048576
                    required:
                    - assessment_question_id
                    - rule_type
                    - points
              required:
              - marking_rule
        description: Marking rule attributes. rule_type defaults from the question's
          default if omitted; points default based on question type.
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{marking_scheme_id}/rules/bulk_create":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: marking_scheme_id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    post:
      summary: Bulk create missing rules (admin)
      tags:
      - Admin - Marking Rules
      description: Auto-generate marking rules for questions without rules
      security:
      - bearerAuth: []
      responses:
        '200':
          description: rules created
          content:
            application/json:
              example:
                status: ok
                data:
                  created_count: 1
                  marking_rules:
                  - id: 3
                    rule_type: option_based
                    points: 10.0
                    is_active: true
                    order: 1
                    criteria: {}
                    assessment_question:
                      id: 40
                      type: AssessmentQuestions::MultipleChoice
                      sub_type:
                    marking_scheme:
                      id: 8
                    created_at: '2025-08-11T08:13:34.976Z'
                    updated_at: '2025-08-11T08:13:34.976Z'
                errors: []
                notes:
                - Created 1 marking rules
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      created_count:
                        type: integer
                      marking_rules:
                        type: array
                        items:
                          "$ref": "#/components/schemas/MarkingRule"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data:
                  created_count:
                  marking_rules: []
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{marking_scheme_id}/rules/rule_types":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: marking_scheme_id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    - name: question_id
      in: query
      description: Question ID
      schema:
        type: integer
    get:
      summary: Get available rule types for a question (admin)
      tags:
      - Admin - Marking Rules
      description: List available rule types for the given question
      security:
      - bearerAuth: []
      responses:
        '200':
          description: rule types returned
          content:
            application/json:
              example:
                status: ok
                data:
                  rule_types:
                  - key: option_based
                    name: Option Based Scoring
                    description: Score based on selected options (points assigned
                      per option)
                  default: option_based
                errors: []
                notes:
                - Rule types retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      rule_types:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                      default:
                        type: string
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data:
                  rule_types:
                  default:
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{marking_scheme_id}/rules/criteria_fields":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: marking_scheme_id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    - name: rule_type
      in: query
      description: Rule type key
      schema:
        type: string
    get:
      summary: Get criteria fields for rule type (admin)
      tags:
      - Admin - Marking Rules
      description: List criteria fields definition for a rule type
      security:
      - bearerAuth: []
      responses:
        '200':
          description: criteria fields returned
          content:
            application/json:
              example:
                status: ok
                data:
                  criteria_fields:
                  - name: partial_scoring
                    type: boolean
                    default: false
                    description_key: rule_types.option_based.partial_scoring
                  - name: negative_scoring
                    type: boolean
                    default: false
                    description_key: rule_types.option_based.negative_scoring
                errors: []
                notes:
                - Criteria fields retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      criteria_fields:
                        type: array
                        items:
                          type: object
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data:
                  criteria_fields:
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{marking_scheme_id}/rules/{id}":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: marking_scheme_id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Marking Rule ID
      required: true
      schema:
        type: integer
    patch:
      summary: Update marking rule (admin)
      tags:
      - Admin - Marking Rules
      description: Update a marking rule
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: marking rule updated
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_rule:
                    id: 4
                    rule_type: option_based
                    points: 12.0
                    is_active: true
                    order: 0
                    criteria: {}
                    assessment_question:
                      id: 46
                      type: AssessmentQuestions::MultipleChoice
                      sub_type:
                    marking_scheme:
                      id: 14
                    created_at: '2025-08-11T08:13:35.206Z'
                    updated_at: '2025-08-11T08:13:35.223Z'
                errors: []
                notes:
                - Marking rule updated successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_rule:
                        "$ref": "#/components/schemas/MarkingRule"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                marking_rule:
                  type: object
                  description: Marking rule attributes
                  properties:
                    rule_type:
                      type: string
                      description: Rule type key
                      example: option_based
                    points:
                      type: number
                      description: Points for the rule
                      example: 12
                    is_active:
                      type: boolean
                      description: Whether the rule is active
                      example: true
                    order:
                      type: integer
                      description: Display/evaluation order
                      example: 2
                    criteria:
                      type: object
                      description: Rule-specific criteria object
              required:
              - marking_rule
              example:
                marking_rule:
                  points: 12
                  is_active: true
        description: Marking rule fields to update.
    delete:
      summary: Delete marking rule (admin)
      tags:
      - Admin - Marking Rules
      description: Delete a marking rule
      security:
      - bearerAuth: []
      responses:
        '200':
          description: marking rule deleted
          content:
            application/json:
              example:
                status: ok
                data:
                  deleted_id: 6
                errors: []
                notes:
                - Marking rule deleted successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      deleted_id:
                        type: integer
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    get:
      summary: List marking schemes (admin)
      tags:
      - Admin - Marking Schemes
      description: List marking schemes for an assessment with pagination and filters
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
      - name: is_active
        in: query
        required: false
        schema:
          type: boolean
      - name: search
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: marking schemes found
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_schemes:
                  - id: 24
                    name: Scheme 2
                    description:
                    is_active: true
                    total_possible_score: 20.0
                    settings:
                      passing_score:
                      grade_boundaries:
                      feedback_templates:
                    assessment:
                      id: 79
                    created_at: '2025-08-11T08:13:35.572Z'
                    updated_at: '2025-08-11T08:13:35.572Z'
                  - id: 23
                    name: Scheme 1
                    description:
                    is_active: true
                    total_possible_score: 10.0
                    settings:
                      passing_score:
                      grade_boundaries:
                      feedback_templates:
                    assessment:
                      id: 79
                    created_at: '2025-08-11T08:13:35.571Z'
                    updated_at: '2025-08-11T08:13:35.571Z'
                  total_count: 2
                  active_count: 2
                  pagination:
                    current_page: 1
                    per_page: 25
                    total_pages: 1
                  assessment:
                    id: 79
                    title: Assess A
                errors: []
                notes:
                - Marking schemes retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_schemes:
                        type: array
                        items:
                          "$ref": "#/components/schemas/MarkingScheme"
                      total_count:
                        type: integer
                      active_count:
                        type: integer
                      pagination:
                        type: object
                      assessment:
                        type: object
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
    post:
      summary: Create marking scheme (admin)
      tags:
      - Admin - Marking Schemes
      description: Create a marking scheme for an assessment
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: marking scheme created
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_scheme:
                    id: 25
                    name: Midterm Scheme
                    description: Auto-grading scheme
                    is_active: false
                    total_possible_score: 100.0
                    settings:
                      passing_score: 60.0
                      grade_boundaries:
                        A: 90
                        B: 80
                        C: 70
                        D: 60
                        F: 0
                      feedback_templates:
                        A: Excellent work!
                        B: Good job!
                        C: Satisfactory performance
                        D: Needs improvement
                        F: Please review the material
                    assessment:
                      id: 82
                    created_at: '2025-08-11T08:13:35.661Z'
                    updated_at: '2025-08-11T08:13:35.661Z'
                errors: []
                notes:
                - Marking scheme created successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_scheme:
                        "$ref": "#/components/schemas/MarkingScheme"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '422':
          description: validation failed
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Marking scheme creation failed
                  details:
                    errors:
                    - Name can't be blank
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                marking_scheme:
                  type: object
                  description: Marking scheme attributes
                  properties:
                    name:
                      type: string
                      description: Name of the marking scheme (must be present)
                      example: Midterm Scheme
                    description:
                      type: string
                      description: Optional description of the marking scheme
                      example: Auto-grading scheme
                    is_active:
                      type: boolean
                      description: Whether to set this scheme active immediately
                      example: false
                    total_possible_score:
                      type: number
                      description: Total points available across all rules (auto-calculated
                        if omitted)
                      example: 100
                    settings:
                      type: object
                      description: Scheme settings for passing score, grade boundaries,
                        and feedback templates
                      properties:
                        passing_score:
                          type: number
                          description: Passing threshold as percentage (0-100)
                          example: 60
                        grade_boundaries:
                          type: object
                          additionalProperties:
                            type: number
                          description: Map of grade letter to minimum percentage threshold
                          example:
                            A: 90
                            B: 80
                            C: 70
                            D: 60
                            F: 0
                        feedback_templates:
                          type: object
                          additionalProperties:
                            type: string
                          description: Map of grade letter to feedback message template
                          example:
                            A: Excellent work!
                            C: Satisfactory performance
                  required:
                  - name
              required:
              - marking_scheme
              example:
                marking_scheme:
                  name: Midterm Scheme
                  description: Auto-grading scheme
                  is_active: false
                  total_possible_score: 100
                  settings:
                    passing_score: 60
                    grade_boundaries:
                      A: 90
                      B: 80
                      C: 70
                      D: 60
                      F: 0
                    feedback_templates:
                      A: Excellent work!
                      C: Satisfactory performance
        description: Marking scheme attributes. If total_possible_score is omitted,
          a default is calculated as 10 points per question. Settings allow configuration
          of passing thresholds, grade boundaries, and feedback templates.
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{id}":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    get:
      summary: Get marking scheme (admin)
      tags:
      - Admin - Marking Schemes
      description: Retrieve a single marking scheme
      security:
      - bearerAuth: []
      responses:
        '200':
          description: marking scheme found
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_scheme:
                    id: 26
                    name: S1
                    description:
                    is_active: true
                    total_possible_score: 10.0
                    settings:
                      passing_score:
                      grade_boundaries:
                      feedback_templates:
                    assessment:
                      id: 86
                    created_at: '2025-08-11T08:13:35.761Z'
                    updated_at: '2025-08-11T08:13:35.761Z'
                errors: []
                notes:
                - Marking scheme retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_scheme:
                        "$ref": "#/components/schemas/MarkingScheme"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Marking scheme not found
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
    patch:
      summary: Update marking scheme (admin)
      tags:
      - Admin - Marking Schemes
      description: Update a marking scheme
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: marking scheme updated
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_scheme:
                    id: 27
                    name: Updated Scheme
                    description:
                    is_active: true
                    total_possible_score: 10.0
                    settings:
                      passing_score:
                      grade_boundaries:
                      feedback_templates:
                    assessment:
                      id: 88
                    created_at: '2025-08-11T08:13:35.823Z'
                    updated_at: '2025-08-11T08:13:35.827Z'
                errors: []
                notes:
                - Marking scheme updated successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_scheme:
                        "$ref": "#/components/schemas/MarkingScheme"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                marking_scheme:
                  type: object
                  description: Marking scheme attributes
                  properties:
                    name:
                      type: string
                      description: Name of the scheme
                      example: Updated Scheme
                    description:
                      type: string
                      description: Description
                      example: Updated description
                    is_active:
                      type: boolean
                      description: Set active status
                      example: false
                    total_possible_score:
                      type: number
                      description: Total possible score
                      example: 120
                    settings:
                      type: object
                      description: Settings object
              required:
              - marking_scheme
              example:
                marking_scheme:
                  name: Updated Scheme
                  description: Updated description
                  is_active: false
        description: Marking scheme fields to update.
    delete:
      summary: Delete marking scheme (admin)
      tags:
      - Admin - Marking Schemes
      description: Delete a marking scheme
      security:
      - bearerAuth: []
      responses:
        '200':
          description: marking scheme deleted
          content:
            application/json:
              example:
                status: ok
                data:
                  deleted_id: 29
                errors: []
                notes:
                - Marking scheme deleted successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      deleted_id:
                        type: integer
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{id}/activate":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    post:
      summary: Activate marking scheme (admin)
      tags:
      - Admin - Marking Schemes
      description: Activate a marking scheme (deactivates others for the assessment)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: marking scheme activated
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_scheme:
                    id: 30
                    name: S1
                    description:
                    is_active: true
                    total_possible_score: 10.0
                    settings:
                      passing_score:
                      grade_boundaries:
                      feedback_templates:
                    assessment:
                      id: 92
                    created_at: '2025-08-11T08:13:35.936Z'
                    updated_at: '2025-08-11T08:13:35.944Z'
                errors: []
                notes:
                - Marking scheme activated successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_scheme:
                        "$ref": "#/components/schemas/MarkingScheme"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/admin/assessments/{assessment_id}/marking-schemes/{id}/clone":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Marking Scheme ID
      required: true
      schema:
        type: integer
    post:
      summary: Clone marking scheme (admin)
      tags:
      - Admin - Marking Schemes
      description: Clone a marking scheme including its rules
      security:
      - bearerAuth: []
      responses:
        '200':
          description: marking scheme cloned
          content:
            application/json:
              example:
                status: ok
                data:
                  marking_scheme:
                    id: 33
                    name: Copy of Original
                    description:
                    is_active: false
                    total_possible_score: 10.0
                    settings:
                      passing_score:
                      grade_boundaries:
                      feedback_templates:
                    assessment:
                      id: 94
                    created_at: '2025-08-11T08:13:35.999Z'
                    updated_at: '2025-08-11T08:13:35.999Z'
                errors: []
                notes:
                - Marking scheme cloned successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      marking_scheme:
                        "$ref": "#/components/schemas/MarkingScheme"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/admin/questions/{question_id}/options":
    parameters:
    - name: question_id
      in: path
      description: Question ID
      required: true
      schema:
        type: integer
    get:
      summary: List question options (admin)
      tags:
      - Admin - Question Options
      description: Retrieve all options for a question with optional filtering (admin
        only)
      security:
      - bearerAuth: []
      parameters:
      - name: is_correct
        in: query
        required: false
        description: Filter by correct answer status
        example: true
        schema:
          type: boolean
      - name: search
        in: query
        required: false
        description: Search by option text
        example: ruby
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (order, points, created_at)
        example: order
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: "Sort direction:\n * `asc` \n * `desc` \n "
        enum:
        - asc
        - desc
        example: asc
        schema:
          type: string
      responses:
        '200':
          description: options found
          content:
            application/json:
              example:
                status: ok
                data:
                  options:
                  - id: 3
                    text: Ruby
                    order: 1
                    is_correct_answer: true
                    points: '10.0'
                    has_assigned_points: true
                    metadata: {}
                    created_at: '2025-08-11T08:13:36.054Z'
                    updated_at: '2025-08-11T08:13:36.054Z'
                  - id: 4
                    text: Python
                    order: 2
                    is_correct_answer: false
                    points: '5.0'
                    has_assigned_points: true
                    metadata: {}
                    created_at: '2025-08-11T08:13:36.056Z'
                    updated_at: '2025-08-11T08:13:36.056Z'
                  total_count: 2
                  question:
                    id: 60
                    text: What is your favorite programming language?
                    type: AssessmentQuestions::MultipleChoice
                  section:
                    id: 72
                    name: Test Section
                  assessment:
                    id: 96
                    title: Test Assessment
                  statistics:
                    total_options: 2
                    correct_options: 1
                    options_with_points: 2
                errors: []
                notes:
                - Question options retrieved successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
    post:
      summary: Create question option (admin)
      tags:
      - Admin - Question Options
      description: Create a new option for a question (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: option created
          content:
            application/json:
              example:
                status: ok
                data:
                  option:
                    id: 9
                    text: JavaScript
                    order: 3
                    is_correct_answer: true
                    points: '15.0'
                    has_assigned_points: true
                    metadata:
                    created_at: '2025-08-11T08:13:36.124Z'
                    updated_at: '2025-08-11T08:13:36.124Z'
                errors: []
                notes:
                - Question option created successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      option:
                        "$ref": "#/components/schemas/AssessmentQuestionOption"
                      selection_count:
                        type: integer
                        example: 0
                      selection_percentage:
                        type: number
                        example: 0.0
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Question option created successfully
                examples:
                  option_created:
                    summary: Option created successfully
                    value:
                      status: ok
                      data:
                        option:
                          id: 1
                          text:
                            en: JavaScript
                          order: 1
                          is_correct_answer: true
                          points: '15.0'
                          has_assigned_points: true
                          metadata:
                          created_at: '2024-01-01T00:00:00.000Z'
                          updated_at: '2024-01-01T00:00:00.000Z'
                        selection_count: 0
                        selection_percentage: 0.0
                      errors: []
                      notes:
                      - Question option created successfully
        '422':
          description: invalid option data
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Option creation failed
                  details:
                    errors:
                    - Points is not a number
                notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                option:
                  type: object
                  description: Option attributes
                  properties:
                    text:
                      type: object
                      description: Option text in multiple languages
                      example:
                        en: JavaScript
                      properties:
                        en:
                          type: string
                          description: English text
                        es:
                          type: string
                          description: Spanish text
                        fr:
                          type: string
                          description: French text
                    order:
                      type: integer
                      description: Display order (auto-assigned if not provided)
                      example: 3
                      minimum: 1
                    is_correct_answer:
                      type: boolean
                      description: Whether this is a correct answer
                      example: false
                    points:
                      type: integer
                      description: Points awarded for selecting this option
                      example: 5
                    metadata:
                      type: object
                      description: Additional metadata
                      example: {}
                  required:
                  - text
              required:
              - option
              example:
                option:
                  text:
                    en: JavaScript
                  order: 3
                  is_correct_answer: false
                  points: 5
        description: Option data for creation
  "/api/v1/admin/questions/{question_id}/options/{id}":
    parameters:
    - name: question_id
      in: path
      description: Question ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Option ID
      required: true
      schema:
        type: integer
    get:
      summary: Get question option details (admin)
      tags:
      - Admin - Question Options
      description: Retrieve details of a specific question option (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: option found
          content:
            application/json:
              example:
                status: ok
                data:
                  option:
                    id: 16
                    text: Ruby
                    order: 1
                    is_correct_answer: true
                    points: '10.0'
                    has_assigned_points: true
                    metadata: {}
                    created_at: '2025-08-11T08:13:36.249Z'
                    updated_at: '2025-08-11T08:13:36.249Z'
                  question:
                    id: 67
                    text: What is your favorite programming language?
                    type: AssessmentQuestions::MultipleChoice
                  section:
                    id: 78
                    name: Test Section
                  assessment:
                    id: 102
                    title: Test Assessment
                  statistics:
                    selections_count: 0
                    selection_percentage: 0
                  selection_count:
                  selection_percentage:
                errors: []
                notes:
                - Question option retrieved successfully
        '404':
          description: option not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Question option not found
                  details: {}
                notes: []
    patch:
      summary: Update question option (admin)
      tags:
      - Admin - Question Options
      description: Update a question option (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: option updated
          content:
            application/json:
              example:
                status: ok
                data:
                  option:
                    id: 20
                    text: Ruby on Rails
                    order: 1
                    is_correct_answer: true
                    points: '20.0'
                    has_assigned_points: true
                    metadata: {}
                    created_at: '2025-08-11T08:13:36.321Z'
                    updated_at: '2025-08-11T08:13:36.327Z'
                errors: []
                notes:
                - Question option updated successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                option:
                  type: object
                  description: Option attributes to update
                  properties:
                    text:
                      type: object
                      description: Option text in multiple languages
                      example:
                        en: Updated Ruby
                    order:
                      type: integer
                      description: Display order
                      example: 1
                      minimum: 1
                    is_correct_answer:
                      type: boolean
                      description: Whether this is a correct answer
                      example: true
                    points:
                      type: integer
                      description: Points awarded for selecting this option
                      example: 20
              required:
              - option
              example:
                option:
                  text:
                    en: Ruby on Rails
                  is_correct_answer: true
                  points: 20
        description: Option data for update
    delete:
      summary: Delete question option (admin)
      tags:
      - Admin - Question Options
      description: Delete a question option (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: option deleted
          content:
            application/json:
              example:
                status: ok
                data:
                  deleted_id: 26
                errors: []
                notes:
                - Question option 'Delete me' deleted successfully
        '422':
          description: cannot delete - minimum options required
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Cannot delete option - minimum 2 options required
                  details:
                    current_options_count: 1
                    minimum_required: 2
                notes: []
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  data:
                    type: object
                    example: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error_code:
                          type: string
                          example: validation_error
                        message:
                          type: string
                          example: 'Cannot delete option: Question must have at least
                            2 options'
                        details:
                          type: object
                          example:
                            minimum_required: 2
                  notes:
                    type: array
                    items:
                      type: string
                examples:
                  minimum_options_error:
                    summary: Cannot delete - minimum options required
                    value:
                      status: error
                      data: {}
                      errors:
                      - error_code: validation_error
                        message: 'Cannot delete option: Question must have at least
                          2 options'
                        details:
                          minimum_required: 2
                      notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/questions/{question_id}/options/reorder":
    parameters:
    - name: question_id
      in: path
      description: Question ID
      required: true
      schema:
        type: integer
    post:
      summary: Reorder question options (admin)
      tags:
      - Admin - Question Options
      description: Reorder question options by providing new order (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: options reordered
          content:
            application/json:
              example:
                status: ok
                data:
                  options:
                  - id: 32
                    text: Python
                    order: 1
                    is_correct_answer: false
                    points: '5.0'
                    has_assigned_points: true
                    metadata: {}
                    created_at: '2025-08-11T08:13:36.495Z'
                    updated_at: '2025-08-11T08:13:36.499Z'
                  - id: 31
                    text: Ruby
                    order: 2
                    is_correct_answer: true
                    points: '10.0'
                    has_assigned_points: true
                    metadata: {}
                    created_at: '2025-08-11T08:13:36.494Z'
                    updated_at: '2025-08-11T08:13:36.501Z'
                  reordered_count: 2
                errors: []
                notes:
                - Question options reordered successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      options:
                        type: array
                        items:
                          "$ref": "#/components/schemas/AssessmentQuestionOption"
                      reordered_count:
                        type: integer
                        example: 2
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Question options reordered successfully
                examples:
                  options_reordered:
                    summary: Options successfully reordered
                    value:
                      status: ok
                      data:
                        options:
                        - id: 2
                          text:
                            en: Python
                          order: 1
                          is_correct_answer: false
                        - id: 1
                          text:
                            en: JavaScript
                          order: 2
                          is_correct_answer: true
                        reordered_count: 2
                      errors: []
                      notes:
                      - Question options reordered successfully
        '404':
          description: invalid option ID
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: 'Option not found: Couldn''t find AssessmentQuestionOption
                    with ''id''=99999 [WHERE "assessment_question_options"."assessment_question_id"
                    = $1]'
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                option_orders:
                  type: array
                  items:
                    type: integer
                  description: Array of option IDs in the desired order
                  example:
                  - 2
                  - 1
                  - 3
              required:
              - option_orders
              example:
                option_orders:
                - 2
                - 1
                - 3
        description: Reorder parameters
  "/api/v1/admin/users":
    get:
      summary: List all users
      tags:
      - Users
      description: Retrieve all users with optional filtering and pagination (admin
        only)
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number for pagination (default: 1)'
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 25, max: 100)'
        example: 25
        schema:
          type: integer
      - name: admin
        in: query
        required: false
        description: Filter by admin status
        example: false
        schema:
          type: boolean
      - name: country_id
        in: query
        required: false
        description: Filter by country ID
        example: 1
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Search by name or email
        example: john
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (created_at, email_address, last_name)
        example: created_at
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: "Sort direction (asc, desc):\n * `asc` \n * `desc` \n "
        enum:
        - asc
        - desc
        example: desc
        schema:
          type: string
      responses:
        '200':
          description: users found
          content:
            application/json:
              example:
                status: ok
                data:
                  users:
                  - id: 231
                    email_address: elmer@feil.example
                    first_name: Karren
                    last_name: Moore
                    full_name: Karren Moore
                    display_name: Karren Moore
                    admin: true
                    profile_completed: true
                    default_language: en
                    country:
                      id: 210
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:36.549Z'
                    updated_at: '2025-08-11T08:13:36.549Z'
                  - id: 232
                    email_address: willie@schuster-barton.example
                    first_name: Effie
                    last_name: Marks
                    full_name: Effie Marks
                    display_name: Effie Marks
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 210
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:36.552Z'
                    updated_at: '2025-08-11T08:13:36.552Z'
                  - id: 233
                    email_address: rosalina.koch@hand.test
                    first_name: Lewis
                    last_name: Haley
                    full_name: Lewis Haley
                    display_name: Lewis Haley
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 211
                      name: China
                      code: CHN
                      display_name: China (CHN)
                      region: Asia
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:36.555Z'
                    updated_at: '2025-08-11T08:13:36.555Z'
                  total_count: 3
                  admin_count: 1
                  business_count: 2
                errors: []
                notes:
                - Users retrieved successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
        '401':
          description: unauthorized - no token
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
    post:
      summary: Create a new user
      tags:
      - Users
      description: Create a new user (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: user created
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 243
                    email_address: newuser@example.com
                    first_name: John
                    last_name: Doe
                    full_name: John Doe
                    display_name: John Doe
                    admin: false
                    profile_completed: false
                    default_language: en
                    country:
                      id: 216
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:36.672Z'
                    updated_at: '2025-08-11T08:13:36.672Z'
                errors: []
                notes:
                - User created successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/User"
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - User created successfully
                examples:
                  user_created:
                    summary: New user created successfully
                    value:
                      status: ok
                      data:
                        user:
                          id: 2
                          email: newuser@example.com
                          first_name: Jane
                          last_name: Smith
                          admin: false
                          profile_completed: false
                          invited_by_id: 1
                          invited_at: '2024-01-01T00:00:00.000Z'
                          created_at: '2024-01-01T00:00:00.000Z'
                      errors: []
                      notes:
                      - User created successfully
        '422':
          description: validation failed
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: User creation failed
                  details:
                    errors:
                    - Email address can't be blank
                notes: []
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  description: User attributes
                  properties:
                    email_address:
                      type: string
                      format: email
                      description: User's email address (must be unique)
                      example: newuser@example.com
                      maxLength: 255
                    password:
                      type: string
                      description: User's password (minimum 8 characters)
                      example: securepassword123
                      minLength: 8
                    first_name:
                      type: string
                      description: User's first name
                      example: John
                      maxLength: 50
                    last_name:
                      type: string
                      description: User's last name
                      example: Doe
                      maxLength: 50
                    country_id:
                      type: integer
                      description: ID of user's country (must exist)
                      example: 1
                    default_language:
                      type: string
                      description: User's preferred language
                      enum:
                      - en
                      - es
                      - fr
                      - it
                      - ja
                      example: en
                    admin:
                      type: boolean
                      description: Whether to grant admin privileges
                      example: false
                  required:
                  - email_address
                  - password
                  - first_name
                  - last_name
                  - country_id
              required:
              - user
              example:
                user:
                  email_address: newuser@example.com
                  password: securepassword123
                  first_name: John
                  last_name: Doe
                  country_id: 1
                  default_language: en
                  admin: false
        description: User data for creation
  "/api/v1/admin/users/{id}":
    parameters:
    - name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
    get:
      summary: Show a user
      tags:
      - Users
      description: Retrieve a specific user
      security:
      - bearerAuth: []
      responses:
        '200':
          description: admin viewing any user
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 254
                    email_address: merle@ziemann-hills.test
                    first_name: Bennie
                    last_name: King
                    full_name: Bennie King
                    display_name: Bennie King
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 224
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:36.777Z'
                    updated_at: '2025-08-11T08:13:36.777Z'
                  invitation_status:
                  statistics:
                    sessions_count: 1
                    active_sessions_count: 1
                    response_sessions_count: 0
                errors: []
                notes:
                - User retrieved successfully
        '403':
          description: forbidden - cannot view other user
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
        '404':
          description: user not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: User not found
                  details: {}
                notes: []
    patch:
      summary: Update a user
      tags:
      - Users
      description: Update a user
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: user updated
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 263
                    email_address: noe_williamson@romaguera.test
                    first_name: Jane
                    last_name: Smith
                    full_name: Jane Smith
                    display_name: Jane Smith
                    admin: false
                    profile_completed: true
                    default_language: es
                    country:
                      id: 230
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:36.869Z'
                    updated_at: '2025-08-11T08:13:36.887Z'
                errors: []
                notes:
                - User updated successfully
        '403':
          description: forbidden - cannot update other user
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: Jane
                    last_name:
                      type: string
                      example: Smith
                    country_id:
                      type: integer
                      example: 1
                    default_language:
                      type: string
                      example: es
                    password:
                      type: string
                      example: newpassword123
              required:
              - user
    delete:
      summary: Delete a user
      tags:
      - Users
      description: Delete a user (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: user deleted
          content:
            application/json:
              example:
                status: ok
                data:
                  deleted_id: 271
                errors: []
                notes:
                - User deleted successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/users/invite":
    post:
      summary: Invite a new user
      tags:
      - Users
      description: Send an invitation to a new user (admin only)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: invitation sent
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 281
                    email_address: invited@example.com
                    first_name: Invited
                    last_name: User
                    full_name: Invited User
                    display_name: Invited User
                    admin: false
                    profile_completed: false
                    default_language: en
                    country:
                      id: 240
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:37.046Z'
                    updated_at: '2025-08-11T08:13:37.046Z'
                  invitation_sent: true
                errors: []
                notes:
                - User invitation sent successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email_address:
                      type: string
                      example: invited@example.com
                    first_name:
                      type: string
                      example: Invited
                    last_name:
                      type: string
                      example: User
                    country_id:
                      type: integer
                      example: 1
                    default_language:
                      type: string
                      example: en
                    admin:
                      type: boolean
                      example: false
                    send_email:
                      type: boolean
                      example: true
                  required:
                  - email_address
                  - first_name
                  - last_name
              required:
              - user
  "/api/v1/admin/users/{id}/make_admin":
    parameters:
    - name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
    patch:
      summary: Promote user to admin
      tags:
      - Users
      description: Give admin privileges to a user (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: user promoted to admin
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 286
                    email_address: lurline@kassulke-kub.test
                    first_name: Otelia
                    last_name: Kovacek
                    full_name: Otelia Kovacek
                    display_name: Otelia Kovacek
                    admin: true
                    profile_completed: true
                    default_language: en
                    country:
                      id: 244
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:37.084Z'
                    updated_at: '2025-08-11T08:13:37.098Z'
                errors: []
                notes:
                - User promoted to admin successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/admin/users/{id}/remove_admin":
    parameters:
    - name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
    patch:
      summary: Remove admin privileges
      tags:
      - Users
      description: Remove admin privileges from a user (admin only)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: admin privileges removed
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 294
                    email_address: denver_goldner@stamm.test
                    first_name: Terrie
                    last_name: Kautzer
                    full_name: Terrie Kautzer
                    display_name: Terrie Kautzer
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 248
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:37.168Z'
                    updated_at: '2025-08-11T08:13:37.172Z'
                errors: []
                notes:
                - Admin privileges removed successfully
        '403':
          description: forbidden - not admin
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: Admin access required
                  details: {}
                notes: []
  "/api/v1/assessments":
    get:
      summary: List all assessments
      tags:
      - Assessments
      description: Retrieve all assessments accessible to the current user with optional
        filtering
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number for pagination (default: 1)'
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 25, max: 100)'
        example: 25
        schema:
          type: integer
      - name: search
        in: query
        required: false
        description: Search by title or description
        example: survey
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (title, created_at)
        example: created_at
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: "Sort direction:\n * `asc` \n * `desc` \n "
        enum:
        - asc
        - desc
        example: desc
        schema:
          type: string
      responses:
        '200':
          description: assessments found
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Assessments retrieved successfully
                data:
                  assessments:
                  - id: 111
                    title: Public Assessment
                    description: Accusantium sit aliquam. Nobis id in.
                    active: true
                    has_country_restrictions: false
                    restricted_countries: []
                    sections_count: 0
                    questions_count: 0
                    created_at: '2025-08-11T08:13:37.244Z'
                    updated_at: '2025-08-11T08:13:37.244Z'
                  - id: 112
                    title: Restricted Assessment
                    description: Molestiae incidunt blanditiis. A recusandae odit.
                    active: true
                    has_country_restrictions: true
                    restricted_countries:
                    - China
                    sections_count: 0
                    questions_count: 0
                    created_at: '2025-08-11T08:13:37.247Z'
                    updated_at: '2025-08-11T08:13:37.247Z'
                  total_count: 2
                  user_can_create:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      assessments:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Assessment"
                      total_count:
                        type: integer
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
        '401':
          description: unauthorized - invalid token
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
                data:
                  assessments: []
                  total_count:
                  user_can_create:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  data:
                    type: object
                    example: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error_code:
                          type: string
                          example: authentication_error
                        message:
                          type: string
                          example: Authentication required
                        details:
                          type: object
                          example: {}
                  notes:
                    type: array
                    items:
                      type: string
                examples:
                  authentication_error:
                    summary: No authentication token provided
                    value:
                      status: error
                      data: {}
                      errors:
                      - error_code: authentication_error
                        message: Authentication required
                        details: {}
                      notes: []
  "/api/v1/auth/login":
    post:
      summary: User login
      tags:
      - Authentication
      description: Authenticate user and receive access token
      parameters: []
      responses:
        '200':
          description: login successful
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Login successful
                data:
                  user:
                    id: 310
                    email_address: test@example.com
                    first_name: Darius
                    last_name: Bernier
                    full_name: Darius Bernier
                    display_name: Darius Bernier
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 260
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:37.331Z'
                    updated_at: '2025-08-11T08:13:37.331Z'
                  session:
                    token: 1LezheVk0IHWmmhIkGZEpG33YHmM-ywqDenC_LE8X3M
                    expires_at: '2025-09-10T08:13:37.347Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/User"
                      session:
                        type: object
                        properties:
                          token:
                            type: string
                            example: eyJhbGciOiJIUzI1NiJ9...
                          expires_at:
                            type: string
                            format: date-time
                            example: '2024-01-08T00:00:00.000Z'
                  errors:
                    type: array
                    items:
                      type: object
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                    - Login successful
                examples:
                  successful_login:
                    summary: Successful login with complete profile
                    value:
                      status: ok
                      data:
                        user:
                          id: 1
                          email: admin@example.com
                          first_name: John
                          last_name: Doe
                          admin: true
                          profile_completed: true
                          created_at: '2024-01-01T00:00:00.000Z'
                        session:
                          token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE3MDQ2NzIwMDB9...
                          expires_at: '2024-01-08T00:00:00.000Z'
                      errors: []
                      notes:
                      - Login successful
        '401':
          description: missing parameters
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: authentication_error
                  message: Invalid email or password
                  details: {}
                notes: []
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - error
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error_code:
                          type: string
                        message:
                          type: string
                        details:
                          type: object
                  data:
                    type: object
                  notes:
                    type: array
        '422':
          description: incomplete profile
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: validation_error
                  message: Profile must be completed before accessing the API
                  details:
                    profile_completion_required: true
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  type: object
                  description: Authentication credentials object
                  properties:
                    email_address:
                      type: string
                      format: email
                      description: User's registered email address
                      example: user@example.com
                    password:
                      type: string
                      minLength: 6
                      description: User's password (minimum 6 characters)
                      example: securepassword123
                  required:
                  - email_address
                  - password
              required:
              - auth
              example:
                auth:
                  email_address: user@example.com
                  password: securepassword123
        description: User login credentials
  "/api/v1/auth/logout":
    delete:
      summary: User logout
      tags:
      - Authentication
      description: Logout user and invalidate current session
      security:
      - bearerAuth: []
      responses:
        '200':
          description: logout successful
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Logout successful
                data:
                  message: Logged out successfully
        '401':
          description: unauthorized - expired token
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: token_expired_error
                  message: Authorization token has expired
                  details: {}
                notes: []
  "/api/v1/auth/me":
    get:
      summary: Get current user
      tags:
      - Authentication
      description: Get current authenticated user information
      security:
      - bearerAuth: []
      responses:
        '200':
          description: user information retrieved
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes: []
                data:
                  user:
                    id: 327
                    email_address: test@example.com
                    first_name: Janee
                    last_name: Ritchie
                    full_name: Janee Ritchie
                    display_name: Janee Ritchie
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 268
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:37.505Z'
                    updated_at: '2025-08-11T08:13:37.505Z'
                  session:
                    token: VaTwU9CUeAd0T1lAYU-T0iTx0dreCQMQH6GNLsy-ZoE
                    expires_at: '2025-09-10T08:13:37.512Z'
                    ip_address: 127.0.0.1
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
  "/api/v1/auth/refresh":
    post:
      summary: Refresh token
      tags:
      - Authentication
      description: Refresh the current session token expiration
      security:
      - bearerAuth: []
      responses:
        '200':
          description: token refreshed
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Token refreshed successfully
                data:
                  session:
                    token: YbxblXrKMpyE7lWiaRmOjxW3mantw7APAnJtmMuQxqw
                    expires_at: '2025-09-10T08:13:37.553Z'
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
  "/api/v1/auth/logout_all":
    delete:
      summary: Logout from all devices
      tags:
      - Authentication
      description: Logout user from all devices by invalidating all sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: logged out from all devices
          content:
            application/json:
              example:
                status: ok
                errors: []
                notes:
                - Logged out from all devices
                data:
                  message: Logged out from all devices
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                status: error
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
  "/api/v1/business/assessments/{assessment_id}/response-sessions":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      example: 1
      required: true
      schema:
        type: integer
    get:
      summary: List my response sessions
      tags:
      - Business - Response Sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: sessions listed
          content:
            application/json:
              example:
                status: ok
                data:
                  response_sessions: []
                errors: []
                notes:
                - Response sessions retrieved successfully
              schema:
                "$ref": "#/components/schemas/ApiResponse"
    post:
      summary: Create a new response session
      tags:
      - Business - Response Sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: session created
          content:
            application/json:
              examples:
                created_session:
                  value:
                    status: ok
                    data:
                      response_session:
                        id: 1000
                        state: draft
                        respondent_name: Jane Doe
                        assessment:
                          id: 1
                          title: Example Assessment
                    errors: []
                    notes:
                    - Response session created successfully
              example:
                status: ok
                data:
                  response_session:
                    id: 2
                    state: draft
                    respondent_name: Jim Anderson
                    started_at:
                    completed_at:
                    submitted_at:
                    marked_at:
                    total_score: 0.0
                    max_possible_score: 0.0
                    grade:
                    feedback:
                    metadata: {}
                    assessment:
                      id: 118
                      title: Est rerum laborum.
                errors: []
                notes:
                - Response session created successfully
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/business/assessments/{assessment_id}/response-sessions/{id}":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      example: 1
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Response Session ID
      example: 42
      required: true
      schema:
        type: integer
    get:
      summary: Get response session
      tags:
      - Business - Response Sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: session found
          content:
            application/json:
              example:
                status: ok
                data:
                  response_session:
                    id: 3
                    state: draft
                    respondent_name: Eve Rippin
                    started_at:
                    completed_at:
                    submitted_at:
                    marked_at:
                    total_score: 0.0
                    max_possible_score: 0.0
                    grade:
                    feedback:
                    metadata: {}
                    assessment:
                      id: 119
                      title: A molestias sunt.
                errors: []
                notes:
                - Response session retrieved successfully
              schema:
                "$ref": "#/components/schemas/ApiResponse"
  "/api/v1/business/assessments/{assessment_id}/response-sessions/{id}/start":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      example: 1
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Response Session ID
      example: 42
      required: true
      schema:
        type: integer
    patch:
      summary: Start session
      tags:
      - Business - Response Sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: session started with first section link
          content:
            application/json:
              examples:
                start_with_meta:
                  value:
                    status: ok
                    data:
                      response_session:
                        id: 42
                        state: started
                        respondent_name: Jane Doe
                        assessment:
                          id: 1
                          title: Example Assessment
                      meta:
                        first_section_id: 10
                        links:
                          show_section: "/api/v1/business/assessments/1/response-sessions/42/sections/10"
                          submit_section: "/api/v1/business/assessments/1/response-sessions/42/submit_section"
                    errors: []
                    notes:
                    - Session started successfully; first visible section provided
                      in meta
              example:
                status: ok
                data:
                  response_session:
                    id: 4
                    state: started
                    respondent_name: Bernie Bartoletti
                    started_at: '2025-08-11T08:13:37.698Z'
                    completed_at:
                    submitted_at:
                    marked_at:
                    total_score: 0.0
                    max_possible_score: 0.0
                    grade:
                    feedback:
                    metadata: {}
                    assessment:
                      id: 120
                      title: Beatae hic ut.
                  meta:
                    first_section_id: 87
                    links:
                      show_section: "/api/v1/business/assessments/120/response-sessions/4/sections/87"
                      submit_section: "/api/v1/business/assessments/120/response-sessions/4/sections/87/submit"
                errors: []
                notes:
                - Session started successfully; first visible section provided in
                  meta
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      response_session:
                        "$ref": "#/components/schemas/AssessmentResponseSession"
                      meta:
                        "$ref": "#/components/schemas/BusinessStartMeta"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
  "/api/v1/business/assessments/{assessment_id}/response-sessions/{id}/sections/{section_id}":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      example: 1
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Response Session ID
      example: 42
      required: true
      schema:
        type: integer
    - name: section_id
      in: path
      description: Section ID
      example: 10
      required: true
      schema:
        type: integer
    get:
      summary: Show section details and questions
      tags:
      - Business - Response Sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: section fetched
          content:
            application/json:
              examples:
                section_and_questions:
                  value:
                    status: ok
                    data:
                      section:
                        id: 10
                        name: Introduction
                        order: 1
                        questions:
                        - id: 100
                          text: What is your name?
                          type: AssessmentQuestions::RichText
                          is_required: true
                          order: 1
                    errors: []
                    notes:
                    - Section and visible questions fetched successfully
              example:
                status: ok
                data:
                  section:
                    id: 88
                    name: Qui debitis.
                    order: 1
                    metadata: {}
                    is_conditional: false
                    has_country_restrictions: false
                    questions_count: 1
                    created_at: '2025-08-11T08:13:37.730Z'
                    updated_at: '2025-08-11T08:13:37.730Z'
                    questions:
                    - id: 76
                      text: Autem dolores sed eos dolore non enim et.
                      type: AssessmentQuestions::RichText
                      question_type: AssessmentQuestions::RichText
                      question_type_name: Richtext
                      sub_type:
                      order: 1
                      is_required: true
                      active: true
                      meta_data: {}
                      is_conditional: false
                      has_country_restrictions: false
                      options: []
                      section:
                        id: 88
                        name: Qui debitis.
                      created_at: '2025-08-11T08:13:37.732Z'
                      updated_at: '2025-08-11T08:13:37.732Z'
                  questions:
                  - id: 76
                    is_required: true
                    order: 1
                    default_locale:
                    text:
                      en: Autem dolores sed eos dolore non enim et.
                    options_json:
                    meta_data: {}
                    assessment_section_id: 88
                    assessment_id: 121
                    created_at: '2025-08-11T08:13:37.732Z'
                    updated_at: '2025-08-11T08:13:37.732Z'
                    active: true
                    sub_type:
                    visibility_conditions: {}
                    is_conditional: false
                    restricted_countries: []
                    has_country_restrictions: false
                errors: []
                notes:
                - Section and questions fetched successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      section:
                        allOf:
                        - "$ref": "#/components/schemas/AssessmentSection"
                        - type: object
                          properties:
                            questions:
                              type: array
                              items:
                                "$ref": "#/components/schemas/AssessmentQuestion"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
  "/api/v1/business/assessments/{assessment_id}/response-sessions/{id}/section_responses/{section_id}":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      example: 1
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Response Session ID
      example: 42
      required: true
      schema:
        type: integer
    - name: section_id
      in: path
      description: Section ID
      example: 10
      required: true
      schema:
        type: integer
    get:
      summary: Section responses
      tags:
      - Business - Response Sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: responses fetched
          content:
            application/json:
              examples:
                section_responses:
                  value:
                    status: ok
                    data:
                      section:
                        id: 10
                        name: Introduction
                        order: 1
                      responses:
                      - id: 200
                        value:
                          text: Answer
                        metadata: {}
                        question:
                          id: 100
                    errors: []
                    notes:
                    - Section responses fetched successfully
              example:
                status: ok
                data:
                  section:
                    id: 89
                    name: Cumque quo.
                    order: 1
                    metadata: {}
                    is_conditional: false
                    has_country_restrictions: false
                    questions_count: 1
                    created_at: '2025-08-11T08:13:37.759Z'
                    updated_at: '2025-08-11T08:13:37.759Z'
                  responses:
                  - id: 2
                    value:
                      text: Answer
                    metadata: {}
                    question:
                      id: 77
                errors: []
                notes:
                - Section responses fetched successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      section:
                        "$ref": "#/components/schemas/AssessmentSection"
                      responses:
                        type: array
                        items:
                          "$ref": "#/components/schemas/AssessmentQuestionResponse"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
  "/api/v1/business/assessments/{assessment_id}/response-sessions/{id}/sections/{section_id}/submit":
    parameters:
    - name: assessment_id
      in: path
      description: Assessment ID
      example: 1
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: Response Session ID
      example: 42
      required: true
      schema:
        type: integer
    - name: section_id
      in: path
      description: Section ID
      example: 10
      required: true
      schema:
        type: integer
    patch:
      summary: Submit current section responses
      tags:
      - Business - Response Sessions
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: submitted; meta has next/previous links or completion
          content:
            application/json:
              examples:
                submitted_with_links:
                  value:
                    status: ok
                    data:
                      response_session:
                        id: 42
                        state: in_progress
                        assessment:
                          id: 1
                          title: Example Assessment
                      meta:
                        next_section_id: 11
                        previous_section_id: 10
                        links:
                          show_next_section: "/api/v1/business/assessments/1/response-sessions/42/sections/11"
                          show_previous_section: "/api/v1/business/assessments/1/response-sessions/42/sections/10"
                          submit_section: "/api/v1/business/assessments/1/response-sessions/42/sections/10/submit"
                    errors: []
                    notes:
                    - Section submitted; navigation meta returned
              example:
                status: ok
                data:
                  response_session:
                    id: 7
                    state: started
                    respondent_name: Dewey Carroll
                    started_at: '2025-08-11T08:13:37.798Z'
                    completed_at:
                    submitted_at:
                    marked_at:
                    total_score: 0.0
                    max_possible_score: 0.0
                    grade:
                    feedback:
                    metadata: {}
                    assessment:
                      id: 123
                      title: Maxime quis omnis.
                  meta:
                    section_id: 90
                    missing_required_question_ids:
                    - 78
                    links:
                      show_section: "/api/v1/business/assessments/123/response-sessions/7/sections/90"
                errors: []
                notes:
                - Section has missing required responses
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      response_session:
                        "$ref": "#/components/schemas/AssessmentResponseSession"
                      meta:
                        "$ref": "#/components/schemas/BusinessSubmitMeta"
                  errors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Error"
                  notes:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BusinessSectionSubmitRequest"
        description: Array of responses to save for the section
  "/api/v1/countries":
    get:
      summary: List all active countries
      tags:
      - Countries
      description: Retrieve all active countries available for selection with optional
        filtering
      parameters:
      - name: region
        in: query
        required: false
        description: "Filter by geographic region:\n * `Africa` \n * `Americas` \n
          * `Asia` \n * `Europe` \n * `Oceania` \n "
        enum:
        - Africa
        - Americas
        - Asia
        - Europe
        - Oceania
        example: Americas
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: Search by country name
        example: united
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: Sort field (name, sort_order)
        example: name
        schema:
          type: string
      - name: sort_order
        in: query
        required: false
        description: Sort direction
        enum:
        - asc
        - desc
        example: asc
        schema:
          type: string
      responses:
        '200':
          description: countries found
          content:
            application/json:
              example:
                status: ok
                data:
                  countries:
                  - id: 282
                    name: China
                    code: CHN
                    display_name: China (CHN)
                    region: Asia
                    active: true
                    sort_order: 0
                  - id: 281
                    name: United States
                    code: USA
                    display_name: United States (USA)
                    region: Americas
                    active: true
                    sort_order: 0
                  total_count: 2
                  regions:
                  - Africa
                  - Americas
                  - Asia
                  - Europe
                  - Oceania
                  active_count:
                  inactive_count:
                errors: []
                notes:
                - Countries retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      countries:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Country"
                      total_count:
                        type: integer
                      regions:
                        type: array
                        items:
                          type: string
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
  "/api/v1/countries/{id}":
    parameters:
    - name: id
      in: path
      description: Country ID
      required: true
      schema:
        type: integer
    get:
      summary: Get country details
      tags:
      - Countries
      description: Retrieve details of a specific country
      responses:
        '200':
          description: country found
          content:
            application/json:
              example:
                status: ok
                data:
                  country:
                    id: 284
                    name: United States
                    code: USA
                    display_name: United States (USA)
                    region: Americas
                    active: true
                    sort_order: 0
                  users_count:
                errors: []
                notes:
                - Country retrieved successfully
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - ok
                    - error
                    - redirect
                  data:
                    type: object
                    properties:
                      country:
                        "$ref": "#/components/schemas/Country"
                  errors:
                    type: array
                    items:
                      type: string
                  notes:
                    type: array
                    items:
                      type: string
        '404':
          description: country not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: Country not found
                  details: {}
                notes: []
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
    get:
      summary: Get user profile (own profile only)
      tags:
      - Users
      description: Retrieve user profile information (business users can only access
        their own profile)
      security:
      - bearerAuth: []
      responses:
        '200':
          description: own profile
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 353
                    email_address: allyson_collier@mills.test
                    first_name: Berna
                    last_name: Rempel
                    full_name: Berna Rempel
                    display_name: Berna Rempel
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 290
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:37.914Z'
                    updated_at: '2025-08-11T08:13:37.914Z'
                  invitation_status:
                errors: []
                notes:
                - Business profile retrieved successfully
        '403':
          description: forbidden - cannot view other user
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: You can only access your own profile
                  details: {}
                notes: []
        '404':
          description: user not found
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: not_found_error
                  message: User not found
                  details: {}
                notes: []
        '401':
          description: unauthorized - no token
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
    patch:
      summary: Update user profile (own profile only)
      tags:
      - Users
      description: Update user profile information (business users can only update
        their own profile)
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: user updated
          content:
            application/json:
              example:
                status: ok
                data:
                  user:
                    id: 365
                    email_address: alberto_greenholt@ernser.example
                    first_name: Updated
                    last_name: Name
                    full_name: Updated Name
                    display_name: Updated Name
                    admin: false
                    profile_completed: true
                    default_language: en
                    country:
                      id: 298
                      name: United States
                      code: USA
                      display_name: United States (USA)
                      region: Americas
                      active: true
                      sort_order: 0
                    created_at: '2025-08-11T08:13:38.020Z'
                    updated_at: '2025-08-11T08:13:38.032Z'
                errors: []
                notes:
                - Business profile updated successfully
        '403':
          description: forbidden - cannot update other user
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: authorization_error
                  message: You can only access your own profile
                  details: {}
                notes: []
        '422':
          description: validation failed
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: validation_error
                  message: Profile update failed
                  details:
                    errors:
                    - First name can't be blank
                notes: []
        '401':
          description: unauthorized - no token
          content:
            application/json:
              example:
                status: error
                data: {}
                errors:
                - error_code: invalid_token_error
                  message: Invalid authorization token
                  details: {}
                notes: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  description: User profile attributes to update
                  properties:
                    first_name:
                      type: string
                      description: User's first name
                      example: John
                      maxLength: 50
                    last_name:
                      type: string
                      description: User's last name
                      example: Doe
                      maxLength: 50
                    country_id:
                      type: integer
                      description: ID of user's country (must exist)
                      example: 1
                    default_language:
                      type: string
                      description: User's preferred language
                      enum:
                      - en
                      - es
                      - fr
                      - it
                      - ja
                      example: en
                    password:
                      type: string
                      description: New password (minimum 8 characters)
                      example: newsecurepassword123
                      minLength: 8
              required:
              - user
              example:
                user:
                  first_name: John
                  last_name: Doe
                  country_id: 1
                  default_language: en
        description: User profile data for update
servers:
- url: http://localhost:3000
  description: Development server
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.questionnaire-cms.com
  description: Production server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email_address:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        display_name:
          type: string
        admin:
          type: boolean
        profile_completed:
          type: boolean
        default_language:
          type: string
        country:
          "$ref": "#/components/schemas/Country"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Country:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        display_name:
          type: string
        region:
          type: string
        active:
          type: boolean
        sort_order:
          type: integer
    Assessment:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        active:
          type: boolean
        has_country_restrictions:
          type: boolean
        restricted_countries:
          type: array
          items:
            type: string
        sections_count:
          type: integer
        questions_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    AssessmentSection:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        order:
          type: integer
        metadata:
          type: object
        is_conditional:
          type: boolean
        trigger_question_id:
          type: integer
        trigger_response_type:
          type: string
          enum:
          - option_selected
          - value_equals
          - value_range
        trigger_values:
          type: array
          items:
            type: string
        operator:
          type: string
          enum:
          - equals
          - not_equals
          - contains
          - greater_than
          - less_than
          - between
          - any
          - all
          - none
        has_country_restrictions:
          type: boolean
        restricted_countries:
          type: array
          items:
            type: string
        restricted_country_names:
          type: array
          items:
            type: string
        questions_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    AssessmentQuestion:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
          description: Text content in the current user's locale (Mobility gem)
          example: What is your name?
        type:
          type: string
        question_type:
          type: string
        question_type_name:
          type: string
        sub_type:
          type: string
          nullable: true
        order:
          type: integer
        is_required:
          type: boolean
        active:
          type: boolean
        meta_data:
          type: object
        is_conditional:
          type: boolean
        trigger_question_id:
          type: integer
        trigger_response_type:
          type: string
          enum:
          - option_selected
          - value_equals
          - value_range
        trigger_values:
          type: array
          items:
            type: string
        operator:
          type: string
          enum:
          - equals
          - not_equals
          - contains
          - greater_than
          - less_than
          - between
          - any
          - all
          - none
        has_country_restrictions:
          type: boolean
        restricted_countries:
          type: array
          items:
            type: string
        restricted_country_names:
          type: array
          items:
            type: string
        options:
          type: array
          items:
            "$ref": "#/components/schemas/AssessmentQuestionOption"
        section:
          "$ref": "#/components/schemas/AssessmentSection"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    AssessmentQuestionOption:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
          description: Text content in the current user's locale (Mobility gem)
          example: Option 1
        order:
          type: integer
        is_correct_answer:
          type: boolean
        points:
          type:
          - number
          - string
          nullable: true
        has_assigned_points:
          type: boolean
        metadata:
          type: object
          nullable: true
        selection_count:
          type: integer
        selection_percentage:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    AssessmentResponseSession:
      type: object
      properties:
        id:
          type: integer
        respondent_name:
          type: string
        state:
          type: string
          enum:
          - draft
          - started
          - submitted
          - completed
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        submitted_at:
          type: string
          format: date-time
          nullable: true
        marked_at:
          type: string
          format: date-time
          nullable: true
        total_score:
          type:
          - number
          - string
        max_possible_score:
          type:
          - number
          - string
        score_percentage:
          type:
          - number
          - string
          nullable: true
        grade:
          type: string
          nullable: true
        feedback:
          type: string
          nullable: true
        progress_percentage:
          type:
          - number
          - string
          nullable: true
        current_section_id:
          type: integer
          nullable: true
        current_question_id:
          type: integer
          nullable: true
        user:
          "$ref": "#/components/schemas/User"
        assessment:
          "$ref": "#/components/schemas/Assessment"
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
    AssessmentQuestionResponse:
      type: object
      properties:
        id:
          type: integer
        value:
          type: object
        metadata:
          type: object
        question:
          "$ref": "#/components/schemas/AssessmentQuestion"
        selected_options:
          type: array
          items:
            "$ref": "#/components/schemas/AssessmentQuestionOption"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BusinessStartMeta:
      type: object
      properties:
        first_section_id:
          type: integer
          nullable: true
          description: ID of the first section user can access
        links:
          type: object
          properties:
            show_section:
              type: string
              nullable: true
              description: URL to fetch section details
            submit_section:
              type: string
              description: URL to submit current section responses
    BusinessSubmitMeta:
      type: object
      properties:
        next_section_id:
          type: integer
          nullable: true
        previous_section_id:
          type: integer
          nullable: true
        links:
          type: object
          properties:
            show_next_section:
              type: string
              nullable: true
            show_previous_section:
              type: string
              nullable: true
            submit_section:
              type: string
        current_section_id:
          type: integer
          nullable: true
        missing_required_question_ids:
          type: array
          items:
            type: integer
    BusinessSectionSubmitRequest:
      type: array
      description: Array of responses to save for the section
      items:
        type: object
        properties:
          question_id:
            type: integer
            description: Question ID
          selected_option_ids:
            type: array
            items:
              type: integer
            description: Choice selection
          number:
            type: number
            description: Numeric input for range questions
          date:
            type: string
            description: Date input for date questions
            example: '2025-01-01'
          text:
            type: string
            description: Text input for rich text questions
          value:
            type: object
            description: Alternate structured value by type
        required:
        - question_id
      example:
      - question_id: 1
        selected_option_ids:
        - 10
        - 12
      - question_id: 2
        number: 4
      - question_id: 3
        text: My answer
    MarkingScheme:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          description: Human-readable name for the marking scheme
          example: Default Scheme
        description:
          type: string
          nullable: true
          description: Optional description of the scheme's purpose
          example: Auto-grading scheme
        is_active:
          type: boolean
          description: Whether this scheme is the active one for its assessment
          example: true
        total_possible_score:
          type: number
          description: Total points available across all rules
          example: 100
        settings:
          type: object
          description: Configuration settings for passing score, grade boundaries,
            and feedback templates
          properties:
            passing_score:
              type: number
              nullable: true
              description: Passing threshold as a percentage (0-100)
              example: 60
            grade_boundaries:
              type: object
              nullable: true
              additionalProperties:
                type: number
              description: Map of grade letter to minimum percentage threshold
              example:
                A: 90
                B: 80
                C: 70
                D: 60
                F: 0
            feedback_templates:
              type: object
              nullable: true
              additionalProperties:
                type: string
              description: Map of grade letter to feedback message template
              example:
                A: Excellent work!
                C: Satisfactory performance
        assessment:
          type: object
          properties:
            id:
              type: integer
              example: 1
        created_at:
          type: string
          format: date-time
          example: '2025-08-10T12:34:56Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-08-10T12:34:56Z'
    MarkingRule:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the marking rule
          example: 10
        rule_type:
          type: string
          description: Type of rule to evaluate against the response
          enum:
          - option_based
          - range_based
          - tolerance_based
          - partial_match
          - exact_match
          - keyword_based
          - format_based
          - file_based
          - size_based
          - type_based
          example: option_based
        points:
          type: number
          description: Points awarded if the rule condition is satisfied
          example: 10
        is_active:
          type: boolean
          description: Whether this rule participates in evaluation
          example: true
        order:
          type: integer
          description: Evaluation order for rules within the scheme (1..N)
          example: 1
        criteria:
          type: object
          description: Rule-specific configuration. The schema varies depending on
            rule_type.
          oneOf:
          - description: option_based criteria (MultipleChoice/Radio/BooleanType)
            type: object
            properties:
              partial_scoring:
                type: boolean
                description: Award partial points for subsets of correct options
                example: true
              negative_scoring:
                type: boolean
                description: Deduct points for wrong selections if enabled
                example: false
            example:
              partial_scoring: true
          - description: range_based criteria (RangeType)
            type: object
            properties:
              min:
                type: number
                description: Minimum inclusive
                example: 1
              max:
                type: number
                description: Maximum inclusive
                example: 5
              tolerance:
                type: number
                description: Allowed deviation from min/max
                example: 0
            required:
            - min
            - max
            example:
              min: 1
              max: 5
              tolerance: 0
          - description: tolerance_based criteria (DateType proximity)
            type: object
            properties:
              expected_value:
                type: number
                description: Expected value (e.g., date encoded as YYYYMMDD)
                example: 20240101
              tolerance:
                type: number
                description: Permitted deviation from expected value
                example: 2
            required:
            - expected_value
            - tolerance
            example:
              expected_value: 20240101
              tolerance: 2
          - description: text-based criteria (RichText) for partial_match/exact_match/keyword_based/format_based
            type: object
            minProperties: 1
            additionalProperties: false
            properties:
              expected_values:
                type: array
                items:
                  type: string
                description: Phrases or exact values to compare against
                example:
                - safety
                - compliance
              partial_match_threshold:
                type: number
                description: Similarity threshold for partial_match (0-1)
                example: 0.7
              scoring_method:
                type: string
                enum:
                - proportional
                - all_or_nothing
                description: How to award points for text matches
                example: proportional
              case_sensitive:
                type: boolean
                description: Apply case sensitivity for exact match
                example: false
              trim_whitespace:
                type: boolean
                description: Trim whitespace before comparison
                example: true
              format_pattern:
                type: string
                description: Regex pattern for format_based rules (if used)
                example: "^\\d{3}-\\d{3}$"
            example:
              expected_values:
              - safety
              - compliance
              partial_match_threshold: 0.7
              scoring_method: proportional
          - description: file-based criteria (FileUpload)
            type: object
            minProperties: 1
            additionalProperties: false
            properties:
              file_criteria:
                type: object
                description: Constraints for file_based
                properties:
                  allowed_types:
                    type: array
                    items:
                      type: string
                    description: Allowed MIME types
                    example:
                    - application/pdf
                  max_size:
                    type: integer
                    description: Max file size in bytes
                    example: 1048576
                additionalProperties: false
              max_size:
                type: integer
                description: Max file size (size_based)
                example: 1048576
              allowed_types:
                type: array
                items:
                  type: string
                description: Allowed MIME types (type_based)
                example:
                - image/png
                - image/jpeg
            example:
              file_criteria:
                allowed_types:
                - application/pdf
                max_size: 1048576
        assessment_question:
          type: object
          description: Summary of the target question for this rule
          properties:
            id:
              type: integer
              description: Question ID
              example: 100
            type:
              type: string
              description: Question STI type
              example: AssessmentQuestions::MultipleChoice
            sub_type:
              type: string
              nullable: true
              description: Optional sub-type hint (e.g., email/url)
              example:
        marking_scheme:
          type: object
          description: Summary of parent marking scheme
          properties:
            id:
              type: integer
              example: 1
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    Error:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
        details:
          type: object
    ApiResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - ok
          - error
          - redirect
        data:
          type: object
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/Error"
        notes:
          type: array
          items:
            type: string
