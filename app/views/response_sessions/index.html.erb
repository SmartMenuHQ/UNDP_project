<div class="bg-white shadow rounded-lg">
  <div class="px-6 py-4 border-b border-gray-200">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-2xl font-bold text-gray-900">Response Sessions</h1>
        <p class="text-sm text-gray-600">Manage assessment responses for <%= @assessment.title %></p>
      </div>
      <div class="flex space-x-3">
        <%= link_to "Back to Assessment", assessment_path(@assessment),
            class: "bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded" %>
        <%= link_to "New Session", new_assessment_response_session_path(@assessment),
            class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
      </div>
    </div>
  </div>

  <!-- Statistics Cards -->
  <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
    <div class="grid grid-cols-1 md:grid-cols-5 gap-4">
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="text-2xl font-bold text-blue-600"><%= @stats[:total] %></div>
        <div class="text-sm text-gray-600">Total Sessions</div>
      </div>
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="text-2xl font-bold text-green-600"><%= @stats[:by_state]['marked'] || 0 %></div>
        <div class="text-sm text-gray-600">Marked</div>
      </div>
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="text-2xl font-bold text-yellow-600"><%= (@stats[:by_state]['submitted'] || 0) + (@stats[:by_state]['under_review'] || 0) %></div>
        <div class="text-sm text-gray-600">Pending Marking</div>
      </div>
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="text-2xl font-bold text-purple-600"><%= @stats[:average_score] %></div>
        <div class="text-sm text-gray-600">Avg Score</div>
      </div>
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="text-2xl font-bold text-red-600"><%= @stats[:pass_rate] %>%</div>
        <div class="text-sm text-gray-600">Pass Rate</div>
      </div>
    </div>
  </div>

  <!-- Filters and Actions -->
  <div class="px-6 py-4 border-b border-gray-200">
    <div class="flex flex-wrap items-center justify-between gap-4">
      <!-- State Filter -->
      <div class="flex items-center space-x-2">
        <label class="text-sm font-medium text-gray-700">Filter by State:</label>
        <%= form_with url: assessment_response_sessions_path(@assessment), method: :get, local: true, class: "flex items-center space-x-2" do |form| %>
          <%= form.select :state, options_for_select([
            ['All States', ''],
            ['Draft', 'draft'],
            ['Started', 'started'],
            ['In Progress', 'in_progress'],
            ['Completed', 'completed'],
            ['Submitted', 'submitted'],
            ['Under Review', 'under_review'],
            ['Marked', 'marked'],
            ['Published', 'published'],
            ['Cancelled', 'cancelled'],
            ['Expired', 'expired']
          ], params[:state]), {}, {
            class: "border border-gray-300 rounded-md px-3 py-2 text-sm",
            onchange: "this.form.submit();"
          } %>
        <% end %>
      </div>

      <!-- Bulk Actions -->
      <div class="flex items-center space-x-2">
        <button id="bulk-mark-btn"
                class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                disabled>
          <i class="fas fa-check-circle mr-2"></i>
          Mark Selected
        </button>
        <button id="bulk-publish-btn"
                class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                disabled>
          <i class="fas fa-share mr-2"></i>
          Publish Selected
        </button>
        <%= link_to "Analytics", analytics_assessment_response_sessions_path(@assessment),
            class: "bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded" %>
      </div>
    </div>
  </div>

  <!-- Sessions Table -->
  <div class="overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-gray-50">
        <tr>
          <th class="px-6 py-3 text-left">
            <input type="checkbox" id="select-all" class="rounded border-gray-300">
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Respondent
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            State
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Progress
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Score
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Duration
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Actions
          </th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200">
        <% @sessions.each do |session| %>
          <tr class="hover:bg-gray-50">
            <td class="px-6 py-4 whitespace-nowrap">
              <input type="checkbox"
                     class="session-checkbox rounded border-gray-300"
                     value="<%= session.id %>"
                     data-state="<%= session.state %>">
            </td>

            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div>
                  <div class="text-sm font-medium text-gray-900">
                    <%= session.respondent_name %>
                  </div>
                  <% if session.respondent_email.present? %>
                    <div class="text-sm text-gray-500">
                      <%= session.respondent_email %>
                    </div>
                  <% end %>
                </div>
              </div>
            </td>

            <td class="px-6 py-4 whitespace-nowrap">
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                         <%= state_badge_class(session.state) %>">
                <% if session.state == 'under_review' %>
                  <i class="fas fa-spinner fa-spin mr-1"></i>
                <% end %>
                <%= session.state.humanize %>
              </span>
            </td>

            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="w-full bg-gray-200 rounded-full h-2">
                  <div class="bg-blue-600 h-2 rounded-full"
                       style="width: <%= session.completion_percentage %>%"></div>
                </div>
                <span class="ml-2 text-sm text-gray-600">
                  <%= session.completion_percentage.round(1) %>%
                </span>
              </div>
            </td>

            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
              <% if session.marked? %>
                <div class="text-lg font-semibold">
                  <%= session.total_score.to_i %>/<%= session.max_possible_score.to_i %>
                </div>
                <div class="text-xs text-gray-500">
                  <%= session.score_percentage.round(1) %>%
                  <span class="font-medium text-<%= session.passed? ? 'green' : 'red' %>-600">
                    (<%= session.grade %>)
                  </span>
                </div>
              <% else %>
                <span class="text-gray-400">Not marked</span>
              <% end %>
            </td>

            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
              <%= session.duration_formatted %>
            </td>

            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
              <%= link_to "View", assessment_response_session_path(@assessment, session),
                  class: "text-blue-600 hover:text-blue-900" %>

              <% if session.can_be_marked? %>
                <%= link_to "Mark", mark_assessment_response_session_path(@assessment, session),
                    method: :patch,
                    class: "text-green-600 hover:text-green-900",
                    confirm: "This will queue the session for background marking. Continue?" %>
              <% end %>

              <% if session.may_publish_results? %>
                <%= link_to "Publish", publish_assessment_response_session_path(@assessment, session),
                    method: :patch,
                    class: "text-purple-600 hover:text-purple-900" %>
              <% end %>

              <%= link_to "Edit", edit_assessment_response_session_path(@assessment, session),
                  class: "text-indigo-600 hover:text-indigo-900" %>
            </td>
          </tr>
        <% end %>

        <% if @sessions.empty? %>
          <tr>
            <td colspan="7" class="px-6 py-4 text-center text-gray-500">
              No response sessions found.
              <%= link_to "Create the first session", new_assessment_response_session_path(@assessment),
                  class: "text-blue-600 hover:text-blue-900 font-medium" %>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
</div>

<!-- Background Job Status Modal -->
<div id="job-status-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
  <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
    <div class="mt-3 text-center">
      <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100">
        <i class="fas fa-cog fa-spin text-green-600 text-xl"></i>
      </div>
      <h3 class="text-lg font-medium text-gray-900 mt-2">Processing in Background</h3>
      <div class="mt-2 px-7 py-3">
        <p class="text-sm text-gray-500" id="job-status-message">
          Your marking request has been queued. You will be notified when it's complete.
        </p>
      </div>
      <div class="items-center px-4 py-3">
        <button id="close-modal" class="px-4 py-2 bg-blue-500 text-white text-base font-medium rounded-md shadow-sm hover:bg-blue-700">
          OK
        </button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const selectAllCheckbox = document.getElementById('select-all');
  const sessionCheckboxes = document.querySelectorAll('.session-checkbox');
  const bulkMarkBtn = document.getElementById('bulk-mark-btn');
  const bulkPublishBtn = document.getElementById('bulk-publish-btn');
  const modal = document.getElementById('job-status-modal');
  const closeModalBtn = document.getElementById('close-modal');

  // Select all functionality
  selectAllCheckbox.addEventListener('change', function() {
    sessionCheckboxes.forEach(checkbox => {
      checkbox.checked = this.checked;
    });
    updateBulkButtons();
  });

  // Individual checkbox changes
  sessionCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateBulkButtons);
  });

  function updateBulkButtons() {
    const checkedBoxes = document.querySelectorAll('.session-checkbox:checked');
    const markableStates = ['submitted', 'under_review'];
    const publishableStates = ['marked'];

    const markableCount = Array.from(checkedBoxes).filter(cb =>
      markableStates.includes(cb.dataset.state)
    ).length;

    const publishableCount = Array.from(checkedBoxes).filter(cb =>
      publishableStates.includes(cb.dataset.state)
    ).length;

    bulkMarkBtn.disabled = markableCount === 0;
    bulkPublishBtn.disabled = publishableCount === 0;

    bulkMarkBtn.textContent = `Mark Selected (${markableCount})`;
    bulkPublishBtn.textContent = `Publish Selected (${publishableCount})`;
  }

  // Bulk mark functionality
  bulkMarkBtn.addEventListener('click', function() {
    const checkedBoxes = document.querySelectorAll('.session-checkbox:checked');
    const sessionIds = Array.from(checkedBoxes)
      .filter(cb => ['submitted', 'under_review'].includes(cb.dataset.state))
      .map(cb => cb.value);

    if (sessionIds.length === 0) return;

    if (confirm(`This will queue ${sessionIds.length} sessions for background marking. Continue?`)) {
      fetch('<%= bulk_mark_assessment_response_sessions_path(@assessment) %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        },
        body: JSON.stringify({ session_ids: sessionIds })
      })
      .then(response => response.json())
      .then(data => {
        showJobStatusModal(`Queued ${sessionIds.length} sessions for marking.`);
        setTimeout(() => window.location.reload(), 2000);
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to queue sessions for marking.');
      });
    }
  });

  // Bulk publish functionality
  bulkPublishBtn.addEventListener('click', function() {
    const checkedBoxes = document.querySelectorAll('.session-checkbox:checked');
    const sessionIds = Array.from(checkedBoxes)
      .filter(cb => cb.dataset.state === 'marked')
      .map(cb => cb.value);

    if (sessionIds.length === 0) return;

    if (confirm(`This will publish results for ${sessionIds.length} sessions. Continue?`)) {
      fetch('<%= bulk_publish_assessment_response_sessions_path(@assessment) %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        },
        body: JSON.stringify({ session_ids: sessionIds })
      })
      .then(response => response.json())
      .then(data => {
        showJobStatusModal(`Published results for ${sessionIds.length} sessions.`);
        setTimeout(() => window.location.reload(), 2000);
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to publish session results.');
      });
    }
  });

  function showJobStatusModal(message) {
    document.getElementById('job-status-message').textContent = message;
    modal.classList.remove('hidden');
  }

  closeModalBtn.addEventListener('click', function() {
    modal.classList.add('hidden');
  });

  // Close modal when clicking outside
  modal.addEventListener('click', function(e) {
    if (e.target === modal) {
      modal.classList.add('hidden');
    }
  });
});
</script>

<% content_for :head do %>
  <style>
    .bg-green-100 { background-color: #dcfce7; }
    .text-green-800 { color: #166534; }
    .bg-yellow-100 { background-color: #fef3c7; }
    .text-yellow-800 { color: #92400e; }
    .bg-blue-100 { background-color: #dbeafe; }
    .text-blue-800 { color: #1e40af; }
    .bg-red-100 { background-color: #fee2e2; }
    .text-red-800 { color: #991b1b; }
    .bg-purple-100 { background-color: #e9d5ff; }
    .text-purple-800 { color: #6b21a8; }
    .bg-gray-100 { background-color: #f3f4f6; }
    .text-gray-800 { color: #1f2937; }
  </style>
<% end %>
